[INFO] Scanning for projects...
[INFO] 
[INFO] -------------< net.kaczmarzyk:specification-arg-resolver >--------------
[INFO] Building specification-arg-resolver 2.6.3-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/specification-arg-resolver/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ specification-arg-resolver ---
[INFO] Surefire report directory: /workdir/specification-arg-resolver/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running net.kaczmarzyk.MultiLevelJoinE2eTest
23:23:51.985 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:51.997 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57a3e26a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75c56eb9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4bc222e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dc9b0f5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6531a794, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b5fad2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e17553a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3eb91815, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@56dc1551, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@102cec62, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74f6c5d8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@27912e3]
23:23:53.038 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:23:53.107 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 3 repository interfaces.
23:23:53.536 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:23:53.722 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
23:23:53.855 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
23:23:53.927 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:23:53.974 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.3.7.Final}
23:23:53.975 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
23:23:54.010 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
23:23:54.128 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:23:54.378 [main] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
23:23:54.725 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:23:54.727 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:23:55.663 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:23:55.701 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:23:55.944 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@277dddcf, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:55.950 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:55.950 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:55.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 10 ms
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils (file:/home/maven/.m2/repository/org/springframework/spring-core/5.1.4.RELEASE/spring-core-5.1.4.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
23:23:56.078 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:23:56.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:23:56.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[NE] Node: '<>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:56.139 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[NE] BinaryLogicOperatorNode: '<>'
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:56.144 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:23:56.144 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>? order by customer0_.id asc
23:23:56.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:23:56.193 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[NE] Node: '<>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:56.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[NE] BinaryLogicOperatorNode: '<>'
             +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:56.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:23:56.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>?
23:23:56.291 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@277dddcf, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.294 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@5c85ed05, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.295 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.295 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.297 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.322 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@5c85ed05, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.324 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@58e0f079, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.325 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.325 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.327 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:23:56.335 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:56.340 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:56.341 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:23:56.341 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name=? order by customer0_.id asc
23:23:56.358 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@58e0f079, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.636 sec
Running net.kaczmarzyk.NotInE2eTest
23:23:56.367 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:56.368 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b4b02d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1dd01876, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12d24c43, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6bf27411, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4a66949a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@57e83608, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57d8d8e2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2f726cf4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@514eefc4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4700db93, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@560e1459, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa7d7a0]
23:23:56.372 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@65e4eba5, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.373 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.375 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.385 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:23:56.386 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:56.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:56.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:23:56.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (?)
23:23:56.425 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@65e4eba5, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.427 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@34986491, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.427 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.427 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.429 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:23:56.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '78L'
             +-[NUM_LONG] Node: '93L'
             +-[NUM_LONG] Node: '86L'
             \-[NUM_LONG] Node: '99L'

23:23:56.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '78'
             +-[NUM_LONG] LiteralNode: '93'
             +-[NUM_LONG] LiteralNode: '86'
             \-[NUM_LONG] LiteralNode: '99'

23:23:56.437 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:23:56.437 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (78 , 93 , 86 , 99)
23:23:56.449 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@34986491, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.451 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@4a0dd851, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.452 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.452 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.454 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:23:56.460 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '101L'

23:23:56.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '101'

23:23:56.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:23:56.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (101)
23:23:56.477 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@4a0dd851, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.479 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1fcb01f8, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.480 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.480 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.482 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.488 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:23:56.489 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:56.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:56.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:23:56.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not in  (? , ?)
23:23:56.501 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1fcb01f8, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.504 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@528070fe, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.505 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.505 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.507 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.523 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@528070fe, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.525 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@688884e, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.525 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.525 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.527 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.543 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@688884e, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.544 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@613d42ab, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.545 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.545 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.547 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:23:56.554 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:56.554 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:56.554 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:23:56.555 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (? , ?)
23:23:56.566 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@613d42ab, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.567 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5629e904, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.568 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.568 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.585 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5629e904, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:56.587 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@8ae7e03, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:56.587 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:56.587 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:56.589 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:56.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:23:56.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '239L'
             +-[NUM_LONG] Node: '254L'
             +-[NUM_LONG] Node: '247L'
             \-[NUM_LONG] Node: '260L'

23:23:56.596 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '239'
             +-[NUM_LONG] LiteralNode: '254'
             +-[NUM_LONG] LiteralNode: '247'
             \-[NUM_LONG] LiteralNode: '260'

23:23:56.596 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:23:56.596 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (239 , 254 , 247 , 260)
23:23:56.605 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@8ae7e03, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.241 sec
Running net.kaczmarzyk.ConstSpELValE2eTest
23:23:56.609 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:56.610 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6ccf06f1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6aefb242, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1455d0f5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5c4e86e7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@48a2fb11, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5fc82de5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@65208c91, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4d71476c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@125447a0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@cede70a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6dc8a602, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2a45c6f0]
23:23:56.800 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:23:56.822 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 3 repository interfaces.
23:23:56.872 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:23:56.905 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
23:23:56.906 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
23:23:56.920 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:23:56.939 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:23:57.010 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:23:57.010 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:23:57.163 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:23:57.168 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:23:57.242 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@52ebacbf, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.243 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.246 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:23:57.272 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:23:57.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:23:57.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:57.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:57.274 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:23:57.274 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:23:57.284 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@52ebacbf, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.285 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@401b7109, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.286 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.286 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.288 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.298 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@401b7109, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.299 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@6212dc7d, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.300 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.300 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.302 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.312 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@6212dc7d, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.314 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@5ace5b0e, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.315 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.315 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.318 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:23:57.339 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:23:57.340 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:57.340 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:23:57.340 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:23:57.340 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>=?
23:23:57.346 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@5ace5b0e, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.348 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@79d31e24, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.348 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.348 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.350 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.367 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@79d31e24, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.368 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@16441c13, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.369 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.369 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.371 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.381 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@16441c13, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.774 sec
Running net.kaczmarzyk.DefaultValE2eTest
23:23:57.384 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:57.384 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c475547, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@36dab184, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@71b9b035, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7669d7a2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@724945, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63c78e5e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5fc3b20b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@67afba96, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7505ef47, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2a6f3ac7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@68fe866b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@729feae8]
23:23:57.386 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@4460edf, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.387 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.387 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.389 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:23:57.397 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:57.397 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:57.397 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:23:57.397 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:23:57.406 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@4460edf, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.407 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@1215982f, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.408 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.408 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.410 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.422 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@1215982f, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 sec
Running net.kaczmarzyk.InE2eTest
23:23:57.425 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:57.425 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@e182453, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2d7bfb13, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ae736a8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7b3b763d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34ceefb5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@461f295c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@50e0541, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@25a41143, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6654e105, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@59be715a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2cef4321, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@29c471f6]
23:23:57.435 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@19abe8f7, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.435 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.435 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.437 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:23:57.442 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '107L'
             \-[NUM_LONG] Node: '122L'

23:23:57.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '107'
             \-[NUM_LONG] LiteralNode: '122'

23:23:57.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:23:57.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (107 , 122)
23:23:57.451 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@19abe8f7, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.452 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@649a76c1, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.453 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.453 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.455 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:23:57.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:57.460 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:57.460 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:23:57.460 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (? , ?)
23:23:57.468 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@649a76c1, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.469 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@354d5692, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.470 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.470 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.472 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.475 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:23:57.476 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:23:57.477 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:57.477 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:23:57.477 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ?)
23:23:57.484 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@354d5692, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.486 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2769d577, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.486 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.487 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.488 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:57.491 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:23:57.492 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param2'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param3'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:23:57.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:57.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:23:57.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ? , ? , ?)
23:23:57.502 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2769d577, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.503 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@359ae83a, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.504 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.504 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.506 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.509 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:23:57.509 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '199L'
             \-[NUM_LONG] Node: '214L'

23:23:57.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '199'
             \-[NUM_LONG] LiteralNode: '214'

23:23:57.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:23:57.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (199 , 214)
23:23:57.519 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@359ae83a, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.520 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@3c9e06d7, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.521 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.521 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.523 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.538 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@3c9e06d7, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.539 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@1e1c1634, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.540 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.540 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.542 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.545 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:23:57.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '245L'

23:23:57.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '245'

23:23:57.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:23:57.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (245)
23:23:57.554 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@1e1c1634, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.556 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7a696a6b, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.557 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.557 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:57.568 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7a696a6b, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.570 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@39482f2b, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.570 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.572 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:23:57.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:57.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:57.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:23:57.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ?)
23:23:57.583 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@39482f2b, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.585 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2d95c3ef, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.586 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.586 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.587 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:57.590 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:23:57.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:57.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:57.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:23:57.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (? , ?)
23:23:57.601 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2d95c3ef, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.602 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2522bea6, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.603 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.603 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.604 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:57.615 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2522bea6, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.617 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@16433d56, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:57.617 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.619 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.630 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@16433d56, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.207 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceArgumentResolverTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running net.kaczmarzyk.spring.data.jpa.web.OrSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinsSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedAndSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedConjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.DisjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextPathVariableResolverTest
Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverSpecConstructorTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest
23:23:57.813 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:57.813 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6472dd0c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a2c62ca, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1c247e5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2a87d40f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@586fe6ee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@51dcf51b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6eb58fdd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7a0619a8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5df9d890, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6b3b9a19, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29b23bc4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6333ac03]
23:23:57.820 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@5a8a50b8, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.822 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.822 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.827 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
23:23:57.836 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@5a8a50b8, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.837 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@66626c96, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.838 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.838 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:57.841 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@66626c96, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.842 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7d710482, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.843 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.843 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.845 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.847 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7d710482, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.848 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@57e15f2d, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.848 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.848 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.852 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@57e15f2d, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverPathVariablesTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest
23:23:57.861 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:57.861 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@24f3d208, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7531ba53, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@72da5f0e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f0170e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3829e6ca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@403230be, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@60b03599, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@627a06e6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1592a3d5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@44f4c619, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@25892fe3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@17765082]
23:23:57.864 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@32142479, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.864 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.864 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.866 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.868 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@32142479, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.869 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@351aa7f, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.870 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.870 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.872 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.874 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@351aa7f, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.875 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1c419713, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.876 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.876 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.880 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1c419713, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:57.881 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1972346b, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:23:57.882 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:57.882 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:57.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:57.885 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1972346b, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running net.kaczmarzyk.spring.data.jpa.web.SpecificationArgumentResolverTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverOnTypeMismatchTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.spring.data.jpa.web.AndSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.ConjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.JoinSpecificationResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedDisjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedOrSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceWithComplexInheritanceTreeTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinFetchResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.ConverterFallbackMechanismTest
Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.utils.TypeUtilTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.PathVariableResolverTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.ConverterTest
Tests run: 24, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToInstantConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToOffsetDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.JoinPathUtilsTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest
23:23:57.999 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.000 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5e5d41dc, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@87f4794, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@78a894fe, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@146b3bc7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@200cdb37, org.springframework.test.context.transaction.TransactionalTestExecutionListener@523d6b45, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6e8e1a98, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23f6a18d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@65e503a7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5cbb2b1d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42ffa0c8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54139bd3]
23:23:58.002 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@16c2c396, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.002 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.002 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.004 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.006 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@16c2c396, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.007 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@64d19dad, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.007 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.007 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.009 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.010 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@64d19dad, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.012 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@23595dd9, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.013 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.013 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.014 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:23:58.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.017 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.017 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:23:58.017 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street not like ?
23:23:58.020 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@23595dd9, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.022 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@d3f2b59, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.022 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.022 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.024 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:23:58.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:23:58.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not like ?
23:23:58.028 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:23:58.028 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:23:58.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not like ?
23:23:58.041 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@d3f2b59, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionUnitTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.199 sec
Running net.kaczmarzyk.spring.data.jpa.domain.IsNullTest
23:23:58.237 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.237 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7abe70f7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@541b377d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7a343975, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@720f29f0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7b3fd68e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7612a64b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2db6d66d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@26fd2a82, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@23f31375, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@40b0c9be, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5bae7a7b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1448e2b6]
23:23:58.239 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64898aa7 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@a53f879, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62cdff2b testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.240 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.241 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.244 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:23:58.244 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:23:58.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:23:58.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:23:58.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is null
23:23:58.249 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@64898aa7 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@a53f879, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62cdff2b testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest
23:23:58.250 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.250 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@613b9bd9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6bddd4ce, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@108d88b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@16019c16, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2b59285c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2ea7e25d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@692cab82, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73d76b9d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@11aeb673, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@a0b11, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c76c029, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4435c9b9]
23:23:58.252 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@67091f3b, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.253 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.253 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.254 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.256 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@67091f3b, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.257 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7a54fc29, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.258 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.258 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.260 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.261 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7a54fc29, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.262 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@4bec8704, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.263 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.263 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.264 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.265 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:23:58.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'address'
          |        \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |        \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:23:58.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.street) like ?
23:23:58.271 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@4bec8704, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.272 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@26c0afdf, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.273 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.273 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.275 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:23:58.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:23:58.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name) like ?
23:23:58.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:23:58.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.280 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.281 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:23:58.281 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ?
23:23:58.283 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@26c0afdf, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest
23:23:58.284 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.284 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@298f8835, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60bd3a8b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5b5b5011, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@8d15c75, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5dcaa37a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@542aa32a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@55f0ba66, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@57c06659, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5f19dea8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5eab0592, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@ed8a7ab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5afefa87]
23:23:58.286 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@51b4ab43, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.287 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.287 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.288 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.292 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:23:58.293 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:23:58.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:23:58.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:23:58.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:23:58.309 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@51b4ab43, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.310 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@16b5c059, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.311 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.312 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:23:58.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.317 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.317 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:23:58.317 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:23:58.321 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@16b5c059, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.322 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@746169cd, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.323 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.323 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.325 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.328 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.329 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.330 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.330 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.330 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:23:58.334 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@746169cd, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.335 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@15a806a2, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.336 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.336 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.337 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.344 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.344 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.344 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:23:58.348 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@15a806a2, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.349 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@627ed93a, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.350 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.350 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.352 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:23:58.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[IDENT] Node: 'generatedAlias0'

23:23:58.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:23:58.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:23:58.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:23:58.359 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@627ed93a, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.361 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ecc8114, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.362 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.362 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:23:58.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:23:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:23:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:23:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:23:58.371 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ecc8114, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.372 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@35ef65e2, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.373 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.374 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.377 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.377 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:23:58.382 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@35ef65e2, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.383 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@64513b46, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.383 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.383 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.385 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.388 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@64513b46, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.389 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1f8d3539, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.390 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:23:58.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:23:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:23:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:23:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:23:58.398 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1f8d3539, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.399 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ff7631f, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.399 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.399 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.401 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:23:58.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:23:58.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:23:58.408 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ff7631f, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.410 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@31fe5168, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.410 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.410 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.412 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.415 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.415 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote2_.id as id1_6_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, ordernote2_.id as id1_6_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where 1=1 order by customer0_.id asc
23:23:58.420 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@31fe5168, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.421 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2b465287, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.422 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.422 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.423 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.429 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2b465287, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.430 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6cacab23, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.430 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.430 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.432 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:23:58.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:23:58.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id order by customer0_.id asc
23:23:58.440 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6cacab23, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.442 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@269c07d, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.444 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.444 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:23:58.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:23:58.449 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:23:58.449 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:23:58.449 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:23:58.452 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@269c07d, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.453 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1d73ddb0, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.454 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.454 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.456 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.461 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1d73ddb0, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.462 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@54f5457e, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.463 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.463 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.464 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.467 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.468 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.468 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:23:58.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id where 1=1 order by customer0_.id asc
23:23:58.472 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@54f5457e, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.188 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest
23:23:58.474 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.474 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6e25ae24, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@66b98075, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@20e27a41, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f638200, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1cf44346, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3664d285, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e7967a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@46577744, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7807e2bb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@68e7f7c4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@510af8e4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2c1a48d6]
23:23:58.475 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2d908f18, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.476 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.476 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.478 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:23:58.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '0'
          \-[NUM_INT] Node: '1'

23:23:58.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '0'
          \-[NUM_INT] LiteralNode: '1'

23:23:58.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:23:58.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1
23:23:58.482 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2d908f18, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.483 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5b2728db, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.483 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.483 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.485 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.486 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:23:58.486 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '539L'

23:23:58.486 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '539'

23:23:58.486 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:23:58.486 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=539
23:23:58.489 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5b2728db, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.490 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1ecf20aa, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.490 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.490 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.494 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1ecf20aa, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.495 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3389c69d, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.496 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.496 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.497 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.500 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3389c69d, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.501 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5a1b205, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.501 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.503 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.506 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5a1b205, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.507 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@52a2c66, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.508 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.508 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.511 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:23:58.513 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@52a2c66, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.514 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@83d47a2, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.515 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.516 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.518 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@83d47a2, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest
23:23:58.520 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.520 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@453a699b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@73000a80, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6169c15d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4cf7f5d8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5a172b6c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@29307ea4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6fc31f6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@75d64dc4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@16795459, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3c16cd6c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5b022899, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1cfde650]
23:23:58.522 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@48b3ce9b, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.523 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.523 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.524 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.525 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:23:58.525 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.526 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:58.526 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:23:58.526 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>=?
23:23:58.529 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@48b3ce9b, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.530 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@17e99817, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.530 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.531 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.532 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.533 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:23:58.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:23:58.539 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:23:58.539 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:23:58.539 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.21
23:23:58.540 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:23:58.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:23:58.542 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:23:58.542 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:23:58.542 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.2
23:23:58.544 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@17e99817, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.546 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1e418480, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.546 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.546 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.548 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.548 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:23:58.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:23:58.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:23:58.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:23:58.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>=56
23:23:58.552 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1e418480, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.553 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@713f5a17, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.553 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.553 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.555 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.556 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:23:58.556 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '56'

23:23:58.556 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '56'

23:23:58.556 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:23:58.556 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>=56
23:23:58.559 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@713f5a17, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.560 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@31cced7, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.560 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.560 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.562 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:23:58.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:58.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:23:58.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=?
23:23:58.567 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@31cced7, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.568 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@69fbc5f, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.568 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.568 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.570 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:23:58.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:23:58.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>=?
23:23:58.574 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@69fbc5f, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.576 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@30a816b8, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.576 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.576 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.578 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.581 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@30a816b8, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.582 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@d9c54e6, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.584 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.584 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.585 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:23:58.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:23:58.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:23:58.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:23:58.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.21
23:23:58.589 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:23:58.590 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0F'

23:23:58.590 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0'

23:23:58.590 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:23:58.590 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0
23:23:58.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:23:58.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.09F'

23:23:58.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.09'

23:23:58.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:23:58.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.09
23:23:58.593 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:23:58.593 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0999F'

23:23:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0999'

23:23:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:23:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0999
23:23:58.596 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@d9c54e6, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.597 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@51fcecaa, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.598 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.599 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.600 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:23:58.600 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.601 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:58.601 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:23:58.601 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>=?
23:23:58.604 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@51fcecaa, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.605 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1b36c5aa, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.606 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.606 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.607 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.608 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:23:58.608 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '56'

23:23:58.609 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '56'

23:23:58.609 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:23:58.609 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>=56
23:23:58.611 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1b36c5aa, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.612 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1c84d89e, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.612 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.612 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.614 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:23:58.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '593L'

23:23:58.616 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '593'

23:23:58.616 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:23:58.616 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>=593
23:23:58.618 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1c84d89e, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.619 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7116f350, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.619 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.620 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.621 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.622 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:23:58.622 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:58.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:23:58.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>=?
23:23:58.626 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7116f350, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.627 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@79b24f79, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.628 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.628 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.630 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:23:58.630 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:23:58.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:23:58.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>=?
23:23:58.634 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@79b24f79, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.635 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@604125bd, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.636 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.636 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.637 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.640 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@604125bd, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.641 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@76982efa, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.643 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.643 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.644 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.646 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@76982efa, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.647 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@440f434f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.648 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.651 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@440f434f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.128 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest
23:23:58.653 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.653 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1569e9d7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c53ce34, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@64ec804f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5008c5a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5ffdea7c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2dadadd9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2d43bedb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2ca08575, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cbe3497, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5c3d91bc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6cb84986, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@449be249]
23:23:58.654 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1c32c581, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.655 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.655 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.656 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.658 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1c32c581, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.659 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1cc20796, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.659 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.661 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:23:58.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:58.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:23:58.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=?
23:23:58.665 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1cc20796, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.666 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@4bc01cab, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.667 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.667 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.668 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.671 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@4bc01cab, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.672 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@24c036b7, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.672 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.672 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.674 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.676 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@24c036b7, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NullTest
23:23:58.679 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.679 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@75288f47, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4effab3b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5e584389, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@42491839, org.springframework.test.context.support.DirtiesContextTestExecutionListener@732af580, org.springframework.test.context.transaction.TransactionalTestExecutionListener@40bf2ead, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5ce76938, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@56653a4d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72c743f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4bb4c147, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2c7ddfa0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@53b52f30]
23:23:58.680 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@39008911, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.681 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.681 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.682 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.683 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:23:58.683 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:23:58.684 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:23:58.684 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:23:58.684 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is not null
23:23:58.686 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@39008911, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.687 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@1e64ee13, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.687 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.687 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.689 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.691 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@1e64ee13, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeTest
23:23:58.695 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.696 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33d95295, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5e1fd72a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c173587, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3212ff1b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ba64e36, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ba076ef, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3ececd11, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b8117f4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@62af3d4c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ad038f8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42becaf6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51934be2]
23:23:58.698 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4670caf6, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.699 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.699 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.702 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4670caf6, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.702 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4945b25f, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.703 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.703 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.704 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.706 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4945b25f, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.707 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@32561cd5, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.707 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.707 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.709 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.709 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:23:58.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:23:58.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street like ?
23:23:58.713 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@32561cd5, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.713 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@241e03cc, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.714 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.714 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.716 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:23:58.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:23:58.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ?
23:23:58.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:23:58.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:58.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:23:58.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ?
23:23:58.721 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@241e03cc, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest
23:23:58.722 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.723 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@35fe64ca, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74d6d08a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3217aada, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@34f14035, org.springframework.test.context.support.DirtiesContextTestExecutionListener@72efba55, org.springframework.test.context.transaction.TransactionalTestExecutionListener@307f6602, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f314bad, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1ff4496, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ecd7bee, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@45c95343, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70900474, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@b303504]
23:23:58.724 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@24c28909, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.725 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.725 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.726 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.727 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@24c28909, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.728 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@4c336d66, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.729 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.729 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.730 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.732 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@4c336d66, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.732 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@3b477ce8, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.733 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.734 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.737 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:23:58.737 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:23:58.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:58.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:23:58.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date between ? and ?
23:23:58.741 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@3b477ce8, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.742 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@c5ed57e, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.742 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.742 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.744 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.747 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@c5ed57e, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest
23:23:58.748 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.748 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@51038633, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@46c09751, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@76da91cf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4cd78959, org.springframework.test.context.support.DirtiesContextTestExecutionListener@128acee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4310d985, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61e67cc1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@118bace5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@55002de6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@10990a32, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42cb7c94, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@eeb1cac]
23:23:58.750 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@145baec6, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.751 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.751 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.752 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.754 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@145baec6, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.755 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@246b2469, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.755 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.755 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.757 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.758 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:23:58.758 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.758 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:58.758 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:23:58.758 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<?
23:23:58.761 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@246b2469, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.762 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@12837172, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.763 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.763 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.764 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.766 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@12837172, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.768 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@45188301, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.768 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.770 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.771 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@45188301, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest
23:23:58.772 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.772 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@35a7c477, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@591e1df7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@697b105e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6c54bc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@dcaa310, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2492f6fb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@155afbd7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@396d21ec, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@61e7d7f2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@52f1d01b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@10371dd1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@40053c7a]
23:23:58.774 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@c030d36, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.774 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.776 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.777 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@c030d36, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.778 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@7d0bca3d, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.779 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.779 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.781 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.782 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@7d0bca3d, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.783 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@6ce9a671, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.783 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.783 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.785 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.789 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@6ce9a671, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.790 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@5aa943c5, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.790 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.790 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.792 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.795 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@5aa943c5, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest
23:23:58.796 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.797 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@385dae6a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d923ffc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4ed70448, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1eb08757, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4bcb5415, org.springframework.test.context.transaction.TransactionalTestExecutionListener@177aef4f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61f94cac, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7be9e5fb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6a937d6f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2ad3e7e5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@164523f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3596a9d5]
23:23:58.798 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@687d4471, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.799 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.799 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.800 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.802 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@687d4471, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.803 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@3cab74d2, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.803 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.803 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.805 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:23:58.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:58.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:58.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:23:58.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>?
23:23:58.810 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@3cab74d2, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.812 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@1062f767, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.812 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.812 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.814 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.816 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@1062f767, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.817 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2ac50ab0, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.818 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.818 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.819 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.820 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2ac50ab0, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.domain.BetweenTest
23:23:58.822 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.822 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3002acf9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@34668a96, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@686d5284, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@43542dd7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@66143420, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6626204e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@645db77c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@60514b5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41f79561, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1604e941, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f6b4aaa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@31e5554e]
23:23:58.824 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@6b981dea, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.824 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.826 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.828 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:23:58.828 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '70L'
          \-[NUM_LONG] Node: '100L'

23:23:58.828 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '70'
          \-[NUM_LONG] LiteralNode: '100'

23:23:58.828 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:23:58.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 70 and 100
23:23:58.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:23:58.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '85L'
          \-[NUM_LONG] Node: '400L'

23:23:58.831 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '85'
          \-[NUM_LONG] LiteralNode: '400'

23:23:58.831 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:23:58.831 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 85 and 400
23:23:58.833 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@6b981dea, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.834 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@76ed5e7e, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.834 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.834 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.836 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.837 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@76ed5e7e, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.838 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@339852ab, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.838 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.838 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.840 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.841 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:23:58.841 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '70.0F'
          \-[NUM_FLOAT] Node: '100.0F'

23:23:58.841 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '70.0'
          \-[NUM_FLOAT] LiteralNode: '100.0'

23:23:58.841 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:23:58.841 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 70.0 and 100.0
23:23:58.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:23:58.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '85.0F'
          \-[NUM_FLOAT] Node: '300.2F'

23:23:58.844 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '85.0'
          \-[NUM_FLOAT] LiteralNode: '300.2'

23:23:58.844 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:23:58.844 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 85.0 and 300.2
23:23:58.847 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@339852ab, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.848 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4608a871, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.848 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.848 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.851 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:23:58.877 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:23:58.878 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:23:58.878 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:23:58.878 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string between ? and ?
23:23:58.880 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4608a871, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.881 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b7bc23a, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.881 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.881 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.883 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.884 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:23:58.884 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '70.0D'
          \-[NUM_DOUBLE] Node: '100.0D'

23:23:58.884 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '70.0'
          \-[NUM_DOUBLE] LiteralNode: '100.0'

23:23:58.884 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:23:58.884 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 70.0 and 100.0
23:23:58.887 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:23:58.888 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '85.0D'
          \-[NUM_DOUBLE] Node: '300.2D'

23:23:58.888 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '85.0'
          \-[NUM_DOUBLE] LiteralNode: '300.2'

23:23:58.888 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:23:58.888 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 85.0 and 300.2
23:23:58.890 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b7bc23a, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.891 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7e4257e3, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.892 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.892 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.893 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.894 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:23:58.894 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:23:58.895 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:58.895 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:23:58.895 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender between ? and ?
23:23:58.897 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7e4257e3, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.898 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@15bb7acd, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.898 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.900 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:23:58.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '70BD'
          \-[NUM_BIG_DECIMAL] Node: '100BD'

23:23:58.902 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '70'
          \-[NUM_BIG_DECIMAL] LiteralNode: '100'

23:23:58.902 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:23:58.902 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 70 and 100
23:23:58.903 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:23:58.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '85BD'
          \-[NUM_BIG_DECIMAL] Node: '300.31BD'

23:23:58.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '85'
          \-[NUM_BIG_DECIMAL] LiteralNode: '300.31'

23:23:58.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:23:58.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 85 and 300.31
23:23:58.906 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@15bb7acd, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.907 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@199efc58, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.907 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.908 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.909 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.910 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@199efc58, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.911 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4c25906b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.912 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.914 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.917 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4c25906b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.918 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5f58ff4f, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.918 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.918 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.920 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.922 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5f58ff4f, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.101 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest
23:23:58.923 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.924 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@637ca94b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4fd1458d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5d6850f7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3b8bbfab, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3dbb7f60, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7803a877, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@67f3a068, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1e33dda, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@674502f9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2604e76, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@786a4eb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@607fa188]
23:23:58.925 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@265b52b7, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.926 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.926 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.929 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@265b52b7, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.930 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1f1d7c52, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.930 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.930 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.932 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.933 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1f1d7c52, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.934 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@134a27c1, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.934 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.934 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.936 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.939 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@134a27c1, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.940 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@402ceac2, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.940 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.942 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.946 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@402ceac2, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinTest
23:23:58.947 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:58.947 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2a59034e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2360414f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@76eabed6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@773faae8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@159e8432, org.springframework.test.context.transaction.TransactionalTestExecutionListener@34d5d5f7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@17eac1b5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d88414a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7cd6e9dd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6636e1dd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@279063c7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@784df46e]
23:23:58.949 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@5a33ba9b, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.949 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.949 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.951 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:23:58.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.954 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.954 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:23:58.954 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:23:58.957 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@5a33ba9b, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.958 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@27ae4c06, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.958 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.958 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:23:58.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:23:58.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name=? order by customer0_.id asc
23:23:58.966 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@27ae4c06, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.967 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@4a83736a, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.967 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.967 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.969 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.971 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:23:58.972 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.972 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.972 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:23:58.972 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:23:58.975 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@4a83736a, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.976 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6816b13d, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.976 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.976 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.978 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.980 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:23:58.980 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:23:58.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:23:58.983 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6816b13d, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.985 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@56510bb2, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.985 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.985 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:58.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:23:58.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'title'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:23:58.990 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'ordernote2_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias2.title,tableAlias=ordernote2_,className=net.kaczmarzyk.spring.data.jpa.OrderNote,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'ordernote2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.OrderNote, tableAlias=ordernote2_}
    |     |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:23:58.990 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:23:58.990 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where ordernote2_.title=? order by customer0_.id asc
23:23:58.993 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@56510bb2, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:58.994 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@708a0150, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:58.994 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:58.994 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:58.996 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:58.999 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@708a0150, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec
Running net.kaczmarzyk.spring.data.jpa.domain.InTest
23:23:59.001 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.001 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1e0ccdd6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f849a79, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6304ff53, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2cad213d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@54372b03, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f9b24ae, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b21a869, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e40d8f9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@43c28101, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@350a7383, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@538ee7ab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7b217a33]
23:23:59.003 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@f014ff3, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.003 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.003 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.005 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.007 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@f014ff3, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.008 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1acf0703, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.009 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.009 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.011 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.011 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:23:59.012 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '807L'
             \-[NUM_LONG] Node: '808L'

23:23:59.012 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '807'
             \-[NUM_LONG] LiteralNode: '808'

23:23:59.012 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:23:59.012 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (12345 , 807 , 808)
23:23:59.014 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1acf0703, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.015 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@18809db8, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.016 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.016 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.018 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:23:59.018 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:59.018 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:59.019 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:23:59.019 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (?)
23:23:59.022 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@18809db8, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.023 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@e80fc9d, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.023 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.023 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.025 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:23:59.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:59.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:23:59.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (? , ?)
23:23:59.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:23:59.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:59.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:23:59.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (?)
23:23:59.032 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@e80fc9d, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.033 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1f7e6c3a, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.034 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.036 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.039 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1f7e6c3a, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.042 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1714fe69, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.042 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.042 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.044 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.045 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:23:59.045 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:59.046 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:59.046 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:23:59.046 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (?)
23:23:59.050 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1714fe69, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.051 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7b054614, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.051 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.051 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.053 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.054 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:23:59.054 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:59.054 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.055 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:23:59.055 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold in (?)
23:23:59.057 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7b054614, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.058 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@64356fe1, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.058 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.058 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.060 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.060 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:23:59.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:23:59.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:23:59.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:23:59.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight in (121 , 65)
23:23:59.063 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@64356fe1, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.064 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@10dad714, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.065 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.065 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.066 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.067 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:23:59.067 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '835L'
             \-[NUM_LONG] Node: '836L'

23:23:59.067 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '835'
             \-[NUM_LONG] LiteralNode: '836'

23:23:59.068 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:23:59.068 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (835 , 836)
23:23:59.070 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@10dad714, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest
23:23:59.071 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.071 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@49ffcd07, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4fc6dcb7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4512085c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7e41619d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@49e11ca7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@30bb4248, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@65beeceb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10063448, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@51c316cb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b00a7b9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29cbdd86, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@84e1883]
23:23:59.073 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@206100aa testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@54236211, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@516c8f5a testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.073 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.073 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.074 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.076 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:23:59.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:59.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:23:59.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ? or customer0_.last_name like ?
23:23:59.080 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@206100aa testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@54236211, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@516c8f5a testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualTest
23:23:59.081 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.082 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4da86d09, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5a21746a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@474c8dec, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3d8c55ff, org.springframework.test.context.support.DirtiesContextTestExecutionListener@33c2a762, org.springframework.test.context.transaction.TransactionalTestExecutionListener@62110754, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4111c517, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1eed4367, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@38321e6f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@52f3859a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1d05cbae, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@69075512]
23:23:59.083 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@35590f53, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.084 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.085 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:23:59.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:23:59.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=?
23:23:59.089 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@35590f53, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.090 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3bf572e0, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.090 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.090 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.093 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3bf572e0, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.094 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@198b4fb6, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.094 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.094 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.096 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:23:59.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:23:59.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:23:59.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:23:59.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long=121
23:23:59.099 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@198b4fb6, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.100 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3860542a, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.101 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.101 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.102 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:23:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:23:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:23:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:23:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int=121
23:23:59.105 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3860542a, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.106 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@64b05928, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.107 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.107 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.108 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:23:59.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:23:59.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:23:59.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:23:59.111 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double=121.2
23:23:59.112 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@64b05928, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.114 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@ec7c39b, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.114 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.114 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.116 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:23:59.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:59.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:23:59.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date=?
23:23:59.120 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@ec7c39b, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.121 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@7e36c60b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.121 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.121 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.123 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.125 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@7e36c60b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.127 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1f0b2ffb, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.127 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.127 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.129 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.131 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1f0b2ffb, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.132 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1a958d2a, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.132 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.132 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.134 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:23:59.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:23:59.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj=?
23:23:59.142 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1a958d2a, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.143 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1e60dce7, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.144 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.144 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.145 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.146 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:23:59.146 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:23:59.146 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:23:59.147 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:23:59.147 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight=121
23:23:59.148 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1e60dce7, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.149 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2f930be7, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.150 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.150 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.151 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.152 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:23:59.152 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '884L'

23:23:59.153 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '884'

23:23:59.153 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:23:59.153 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=884
23:23:59.155 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2f930be7, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.156 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@26f6fbbd, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.156 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.156 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.158 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:23:59.159 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.159 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:59.159 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:23:59.159 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=?
23:23:59.162 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@26f6fbbd, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 13, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.082 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest
23:23:59.163 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.163 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3693deae, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6f3af541, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@723493f2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@21e40707, org.springframework.test.context.support.DirtiesContextTestExecutionListener@92adb3b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3182b7a2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@677f1963, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6622f6b4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@398e1a48, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d95957c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2be33ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@73d8f219]
23:23:59.165 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@19a5d711, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.165 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.165 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.167 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.168 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@19a5d711, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.169 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1529406e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.169 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.169 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.171 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.174 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1529406e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.175 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@7da7a932, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.176 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.176 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.177 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.179 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@7da7a932, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.180 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1f600254, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.181 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.181 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.182 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.183 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1f600254, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest
23:23:59.185 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.185 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@663e2cfd, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@76cb6d16, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@764b7ff7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1962f55, org.springframework.test.context.support.DirtiesContextTestExecutionListener@16d8a25e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3bd6ce4e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@164fba04, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2693d31f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@750a4fc1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@78235b90, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13d7410a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2b647344]
23:23:59.187 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@66716c60, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.188 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.188 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.189 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:23:59.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:23:59.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)<>?
23:23:59.192 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:23:59.192 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.193 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.193 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:23:59.193 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)<>?
23:23:59.194 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@66716c60, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.196 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1a23e131, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.196 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.196 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.197 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:23:59.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.199 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:59.199 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:23:59.199 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<>?
23:23:59.201 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1a23e131, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.202 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@72b1ee4b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.203 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.203 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.204 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.205 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:23:59.205 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.206 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.206 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:23:59.206 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<>?
23:23:59.208 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@72b1ee4b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.209 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@46eaf531, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.209 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.211 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.212 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@46eaf531, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.213 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@778c5658, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.213 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.213 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.215 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:23:59.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:23:59.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:23:59.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:23:59.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<>121
23:23:59.218 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@778c5658, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.219 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2375fe4a, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.219 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.219 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.221 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.221 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:23:59.222 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:23:59.222 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:23:59.222 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:23:59.222 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<>121
23:23:59.224 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2375fe4a, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.225 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2a67ed1f, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.225 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.225 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.227 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.227 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:23:59.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:23:59.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:23:59.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:23:59.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<>121.2
23:23:59.230 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2a67ed1f, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.231 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@50a65fb9, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.231 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.231 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.233 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.233 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:23:59.234 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.234 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:59.234 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:23:59.234 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<>?
23:23:59.236 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@50a65fb9, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.237 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@15d67d0f, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.238 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.238 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.239 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.240 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:23:59.240 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.240 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.240 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:23:59.240 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<>?
23:23:59.242 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@15d67d0f, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.243 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1d2fd73c, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.243 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.245 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.247 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1d2fd73c, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.252 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@10e25b2a, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.253 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.253 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.254 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:23:59.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:23:59.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<>?
23:23:59.257 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@10e25b2a, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.258 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3f1e530c, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.259 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.259 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.260 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.261 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:23:59.261 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:23:59.261 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:23:59.262 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:23:59.262 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<>121
23:23:59.263 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3f1e530c, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.264 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1fb5eda7, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.265 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:23:59.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '940L'

23:23:59.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '940'

23:23:59.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:23:59.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>940
23:23:59.270 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1fb5eda7, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.271 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2be9dfb0, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.271 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.271 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.273 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.276 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2be9dfb0, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.092 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest
23:23:59.278 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.278 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@54dd6160, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@24f89b6b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@307f4223, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3730fb2f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@8d95ac8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@689aab7b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@22be8211, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1267fcea, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@502afb74, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6dd65379, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b2eead8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1603d1fb]
23:23:59.280 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30d016c9 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@43aae476, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e535e23 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.280 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.280 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.282 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:23:59.283 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'address'
          |  |  \-[IDENT] Node: 'street'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LT] Node: '<'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:59.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  |  \-[IDENT] IdentNode: 'street' {originalText=street}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LT] BinaryLogicOperatorNode: '<'
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:59.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:23:59.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.street like ?) and customer0_.registration_date<?
23:23:59.286 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30d016c9 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@43aae476, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e535e23 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest
23:23:59.288 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.288 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4e9d3925, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@685a8158, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5ae9ea0a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4080ea09, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67f3b72d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b9fbaca, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4e33a209, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@924c964, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73145db2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@557bf0f0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@60b33bc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@294bb5f0]
23:23:59.290 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@286bd902, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.291 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.292 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.293 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@286bd902, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.294 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5e4c74ec, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.295 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.295 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.297 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.300 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5e4c74ec, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.301 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5db9952b, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.302 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.302 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.303 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.306 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5db9952b, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.307 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@1c66272b, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.308 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.308 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.309 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.310 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@1c66272b, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotNullTest
23:23:59.312 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.312 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4dbae8f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2ffa8ce5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f17140d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@30749de8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6902e2bf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@12e4c6de, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@75b41ff3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@61bb5770, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1f5246e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2b34a1e0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7eaa78f2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4591a080]
23:23:59.314 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@27f0a71d, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.315 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.315 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.316 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.318 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@27f0a71d, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.319 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@2667d4fe, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.320 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.320 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.324 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@2667d4fe, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanTest
23:23:59.327 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.327 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3aaed411, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5580356d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@61267fa2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@54dd2962, org.springframework.test.context.support.DirtiesContextTestExecutionListener@181f61b4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4c601487, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1e69a9c6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23c21550, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4033d25d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@cbb32f0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5f4f8d38, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6c946b14]
23:23:59.329 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@667dfd42, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.330 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.330 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.331 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:23:59.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:23:59.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<?
23:23:59.336 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@667dfd42, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.343 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1c6912db, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.343 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.343 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.345 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.345 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:23:59.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.200100000000006D'

23:23:59.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.200100000000006'

23:23:59.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:23:59.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.200100000000006
23:23:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:23:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:23:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:23:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:23:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.2
23:23:59.350 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1c6912db, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.351 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3861f2c9, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.351 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.351 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.353 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:23:59.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:23:59.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:23:59.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:23:59.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<55
23:23:59.356 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3861f2c9, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.357 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6281f945, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.358 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.358 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.359 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:23:59.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:23:59.362 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:23:59.362 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:23:59.362 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<55
23:23:59.364 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6281f945, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.365 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@155ae856, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.366 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.366 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.367 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.370 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@155ae856, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.371 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@400b4dd5, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.372 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.374 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:23:59.374 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.375 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.375 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:23:59.375 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<?
23:23:59.377 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@400b4dd5, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.378 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@731a1399, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.379 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.379 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.380 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.383 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@731a1399, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.384 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5aa786fc, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.384 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.386 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:23:59.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:23:59.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:23:59.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:23:59.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<65.21
23:23:59.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:23:59.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.0F'

23:23:59.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.0'

23:23:59.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:23:59.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<55.0
23:23:59.391 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5aa786fc, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.391 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@27b8adeb, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.392 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.393 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:23:59.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:23:59.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<?
23:23:59.397 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@27b8adeb, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.398 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@191a8997, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.398 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.398 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.400 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.400 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:23:59.400 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:23:59.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:23:59.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:23:59.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<55
23:23:59.403 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@191a8997, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.404 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5b218570, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.404 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.404 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.405 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.406 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:23:59.406 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1007L'

23:23:59.407 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1007'

23:23:59.407 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:23:59.407 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1007
23:23:59.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:23:59.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1009L'

23:23:59.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1009'

23:23:59.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:23:59.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1009
23:23:59.410 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5b218570, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.411 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2a806a8d, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.412 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.412 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.413 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.414 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:23:59.414 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.414 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:59.415 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:23:59.415 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<?
23:23:59.417 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2a806a8d, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.418 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5af69032, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.419 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.420 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.421 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:23:59.421 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:23:59.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:23:59.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<?
23:23:59.424 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5af69032, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.425 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@17319443, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.426 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.426 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.427 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.429 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@17319443, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.429 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@50a80d6b, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.430 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.430 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.431 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.433 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@50a80d6b, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.434 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3fb75c24, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.435 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.435 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.436 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.438 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3fb75c24, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.123 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest
23:23:59.439 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.439 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3ba34018, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71139676, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@83b55dc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@78ac66e2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59ae4a6f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3463d70a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@66a4e1ef, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7d2410af, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5672c056, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7c039615, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3d69bbe3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@60157589]
23:23:59.441 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@702189aa, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.441 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.441 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.443 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:23:59.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:23:59.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>?
23:23:59.447 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@702189aa, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.448 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@188496fd, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.448 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.448 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.450 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.450 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:23:59.450 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:23:59.451 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:23:59.451 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:23:59.451 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.21
23:23:59.452 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:23:59.453 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:23:59.453 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:23:59.453 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:23:59.453 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.2
23:23:59.455 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@188496fd, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.456 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5e583af4, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.456 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.456 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.457 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:23:59.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:23:59.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:23:59.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:23:59.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>56
23:23:59.461 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5e583af4, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.461 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5d63295e, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.462 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.462 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.463 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:23:59.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '65'

23:23:59.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '65'

23:23:59.465 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:23:59.465 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>65
23:23:59.474 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5d63295e, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.475 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@768cfd06, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.476 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.476 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.477 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.480 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@768cfd06, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.481 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@10bcceb5, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.482 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.482 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.483 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.484 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:23:59.484 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.484 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.484 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:23:59.484 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>?
23:23:59.487 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@10bcceb5, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.488 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@37d4b676, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.488 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.488 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.490 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.493 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@37d4b676, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.494 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d1f1b98, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.494 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.494 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.496 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:23:59.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:23:59.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:23:59.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:23:59.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.21
23:23:59.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:23:59.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:23:59.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:23:59.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:23:59.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.1
23:23:59.500 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d1f1b98, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.501 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4740e12f, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.501 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.503 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:23:59.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:23:59.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>?
23:23:59.506 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4740e12f, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.507 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7df7cc64, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.507 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.507 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.509 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:23:59.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '65'

23:23:59.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '65'

23:23:59.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:23:59.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>65
23:23:59.512 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7df7cc64, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.513 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1e9cc446, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.515 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:23:59.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1073L'

23:23:59.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1073'

23:23:59.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:23:59.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>1073
23:23:59.519 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1e9cc446, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.520 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@46f77687, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.520 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.520 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.522 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:23:59.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:59.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:23:59.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>?
23:23:59.525 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@46f77687, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.526 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1ddf5237, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.527 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.527 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.528 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:23:59.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.530 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:23:59.530 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:23:59.530 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>?
23:23:59.532 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1ddf5237, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.533 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@40904969, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.534 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.534 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.535 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.537 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@40904969, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.538 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d17ce84, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.538 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.538 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.540 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.541 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d17ce84, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.542 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@6948460f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.542 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.542 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.544 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.546 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@6948460f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.098 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotInTest
23:23:59.547 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.547 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@23ebd596, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f8b373f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2e1bbf2a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3a0f0552, org.springframework.test.context.support.DirtiesContextTestExecutionListener@47b530e0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3171c5e6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4260de0d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@876686, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6e5b7446, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@513ad29e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@15eefe02, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2ee6196f]
23:23:59.549 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2e259c54, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.550 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.550 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:23:59.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:59.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:59.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:23:59.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (? , ?)
23:23:59.555 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2e259c54, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.556 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@6f3b07ed, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.556 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:23:59.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '1099L'
             \-[NUM_LONG] Node: '1100L'

23:23:59.561 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '1099'
             \-[NUM_LONG] LiteralNode: '1100'

23:23:59.561 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:23:59.561 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (12345 , 1099 , 1100)
23:23:59.565 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@6f3b07ed, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.566 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7896b4d0, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.566 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.566 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.568 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:23:59.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:59.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:23:59.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:23:59.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (?)
23:23:59.581 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7896b4d0, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.582 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4b5e664f, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.583 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.583 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.584 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:23:59.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:23:59.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:23:59.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (? , ?)
23:23:59.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:23:59.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:59.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:23:59.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (?)
23:23:59.590 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4b5e664f, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.591 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5f18ed13, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.591 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.593 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.595 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5f18ed13, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.596 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4d4630e, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.597 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.597 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.602 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4d4630e, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.604 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@30012b46, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.605 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.605 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.606 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.607 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:23:59.608 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:23:59.608 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.608 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:23:59.608 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold not in  (?)
23:23:59.610 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@30012b46, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.611 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1d9f9c9d, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.611 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.611 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.613 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.613 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:23:59.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:23:59.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:23:59.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:23:59.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight not in  (121 , 65)
23:23:59.620 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1d9f9c9d, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.621 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@34538dde, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.622 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.622 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.623 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.624 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:23:59.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '1127L'
             \-[NUM_LONG] Node: '1128L'

23:23:59.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '1127'
             \-[NUM_LONG] LiteralNode: '1128'

23:23:59.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:23:59.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (1127 , 1128)
23:23:59.634 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@34538dde, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest
23:23:59.635 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.636 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cf6ea5b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ff8df3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@617e67f1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6e14a376, org.springframework.test.context.support.DirtiesContextTestExecutionListener@25fb28dd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5917b984, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4bc40cb8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@8019a5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7c4164a8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@18fe293d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73344756, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@737935a4]
23:23:59.637 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@5162ccc9, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.637 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.637 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.639 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.642 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@5162ccc9, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.642 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@77a3c614, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.643 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.643 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.645 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.646 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@77a3c614, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.647 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3c02b068, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.648 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.650 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.660 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3c02b068, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.661 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2efb1871, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.661 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.661 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.663 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.665 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2efb1871, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest
23:23:59.667 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.667 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b8d9b97, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5284d7f2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@52ce11b5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7522ea53, org.springframework.test.context.support.DirtiesContextTestExecutionListener@52d48643, org.springframework.test.context.transaction.TransactionalTestExecutionListener@269bf0ac, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@47a0e73, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@66e81cdd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@10f868dd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@691ff4fe, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3d426638, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1b6a9bb9]
23:23:59.674 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4aca6d5a, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.674 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.674 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.676 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.677 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:23:59.677 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.678 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:23:59.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<=?
23:23:59.682 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4aca6d5a, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.683 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4db5663b, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.683 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.683 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.685 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:23:59.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:23:59.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:23:59.687 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:23:59.687 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=65.21
23:23:59.688 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:23:59.692 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:23:59.692 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:23:59.693 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:23:59.693 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=55.2
23:23:59.695 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4db5663b, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.696 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@471e3e69, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.696 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.696 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.698 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.698 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:23:59.699 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:23:59.699 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:23:59.699 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:23:59.699 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<=55
23:23:59.701 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@471e3e69, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.702 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1a5cb2b3, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.702 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.702 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.704 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.704 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:23:59.704 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:23:59.705 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:23:59.705 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:23:59.705 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<=55
23:23:59.707 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1a5cb2b3, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.709 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@c1add62, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.709 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.709 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.711 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.715 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@c1add62, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.717 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7c269f21, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.717 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.717 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.719 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:23:59.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:23:59.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<=?
23:23:59.729 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7c269f21, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.730 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7b6cb223, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.731 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.731 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.732 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.735 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7b6cb223, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.736 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2541c84, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.737 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.737 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.738 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:23:59.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:23:59.740 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:23:59.741 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:23:59.741 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=65.1
23:23:59.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:23:59.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.1F'

23:23:59.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.1'

23:23:59.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:23:59.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=55.1
23:23:59.747 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2541c84, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.748 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@37df3dee, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.749 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.749 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.751 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.752 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:23:59.752 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:23:59.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:23:59.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<=?
23:23:59.756 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@37df3dee, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.758 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6a056d13, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.758 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.758 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.760 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:23:59.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:23:59.761 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:23:59.761 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:23:59.761 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<=55
23:23:59.763 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6a056d13, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.770 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1e35e4d9, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.771 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.771 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.772 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.773 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:23:59.773 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1185L'

23:23:59.773 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1185'

23:23:59.773 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:23:59.773 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<=1185
23:23:59.775 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1e35e4d9, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.776 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@3a8f9d53, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.776 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.776 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.778 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:23:59.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.779 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:23:59.779 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:23:59.779 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<=?
23:23:59.783 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@3a8f9d53, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.785 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@44a65503, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.785 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.785 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.787 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:23:59.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.788 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:23:59.788 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:23:59.788 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<=?
23:23:59.791 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@44a65503, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.792 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@774e5726, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.793 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.793 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.794 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.795 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@774e5726, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.796 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@648be86e, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.797 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.797 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.798 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.800 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@648be86e, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.802 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6cee59d6, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.802 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.802 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.803 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.805 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6cee59d6, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.139 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest
23:23:59.806 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.806 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5710fcdf, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@50c903e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b95469, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@63782ad0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@33ded464, org.springframework.test.context.transaction.TransactionalTestExecutionListener@52b23f41, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1f652362, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3de9a4f4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@78513ad9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b5a4aa5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@d12009f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7d2ccbcd]
23:23:59.808 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3a571436, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.808 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.810 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.810 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:23:59.810 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.811 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.811 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:23:59.811 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)=?
23:23:59.813 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:23:59.813 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:23:59.813 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:23:59.813 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:23:59.813 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)=?
23:23:59.815 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3a571436, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.819 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4e260e04, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.820 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.820 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.821 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.828 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4e260e04, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.830 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@65747311, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.831 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.831 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.832 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.835 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@65747311, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.836 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2f539c9b, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.836 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.836 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.838 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.840 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2f539c9b, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.841 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1e7a20d5, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.842 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.842 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.843 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.845 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1e7a20d5, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.846 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4ba97a4, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.847 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.847 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.848 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.850 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4ba97a4, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.851 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7fb7be26, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.852 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.852 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.853 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.855 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7fb7be26, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.857 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@39122753, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.858 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.858 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.859 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.862 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@39122753, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.863 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@d72ec1b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.863 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.865 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.867 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@d72ec1b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.868 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3f608bde, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.868 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.868 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.870 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.872 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3f608bde, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.873 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2b48931b, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.873 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.873 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.874 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.877 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2b48931b, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.877 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@152d019b, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.878 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.879 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.881 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@152d019b, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.882 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@51713b0f, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.883 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.883 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:23:59.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1255L'

23:23:59.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1255'

23:23:59.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:23:59.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1255
23:23:59.887 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@51713b0f, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.888 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@40f923da, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.889 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.889 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.890 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.893 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@40f923da, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.088 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest
23:23:59.894 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.894 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@245b080c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@33650388, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5a575e30, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@d1a17cc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@71fd650b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6a9f41ff, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ad92442, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@57a0f6a2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4d6f0460, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5def348b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1ed7e040, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4e1210de]
23:23:59.895 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@17b59bc, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.896 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.897 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.899 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@17b59bc, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.900 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@2e7d71d9, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.901 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.901 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.902 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.904 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@2e7d71d9, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.905 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6170aa63, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.905 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.905 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.906 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.908 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6170aa63, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.909 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4a3ebba6, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.910 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.910 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.911 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.913 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4a3ebba6, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.914 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@58ba1195, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.914 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.914 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.916 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.918 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@58ba1195, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.919 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@41e5664e, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.919 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.919 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.920 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.922 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@41e5664e, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.923 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7787fce1, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.924 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.924 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.925 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.927 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7787fce1, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.928 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@29063116, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.929 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.929 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.930 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.932 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@29063116, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.933 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@355ea7fc, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.933 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.933 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.935 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.937 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@355ea7fc, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.938 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@67ee3b1, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.938 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.938 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.942 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@67ee3b1, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.942 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7f888518, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.943 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.943 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.944 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.945 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:23:59.945 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1293L'

23:23:59.946 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1293'

23:23:59.946 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:23:59.946 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>1293
23:23:59.947 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7f888518, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.948 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@53722f45, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.949 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.949 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.950 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.954 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@53722f45, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec
Running net.kaczmarzyk.EqualIgnoreCaseE2eTest
23:23:59.956 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.956 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@12c2135e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@235b8132, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@30f94b64, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2fc3d28, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2686ca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7f0bd5ed, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d30303, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@66257bec, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5281b134, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7384b234, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6e526c5c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@23e58061]
23:23:59.958 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@521090f1, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.958 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.958 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.959 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.960 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.961 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:23:59.972 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@521090f1, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:23:59.975 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@189faf12, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.975 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.975 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.978 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:23:59.980 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.980 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.983 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:23:59.994 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@189faf12, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running net.kaczmarzyk.ParamSeparatorE2eTest
23:23:59.995 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:23:59.996 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2f499565, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a2256bb, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2ee18aca, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1300bc97, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7001e12f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@187ee61a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3a6b8805, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2c997fdb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@536efbfe, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3ccf89bf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a021583, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3d02debf]
23:23:59.997 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac74499 testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@6fff29f4, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@75897392 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:23:59.997 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:23:59.997 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:23:59.999 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.001 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:24:00.001 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'Customer'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:24:00.001 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}

23:24:00.001 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:24:00.001 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_
23:24:00.018 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac74499 testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@6fff29f4, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@75897392 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.LikeE2eTest
23:24:00.019 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.019 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@381a4407, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6169de0c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4e06d526, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7d707e72, org.springframework.test.context.support.DirtiesContextTestExecutionListener@17a027a7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@381602e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@40c14f20, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3e3c2aa4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@28b7afdb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@203ea126, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6acc424e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@357a3cb9]
23:24:00.025 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@dfee4f1 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@59de6f39, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@32016cf3 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.026 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.026 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.027 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.044 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@dfee4f1 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@59de6f39, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@32016cf3 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running net.kaczmarzyk.NullE2eTest
23:24:00.047 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.047 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1f122485, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7fd9d86, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@413d2d3e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@9addea4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@715e518, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6c6f49d1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4493ddbf, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23ac7377, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@bb96f3f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d0e8e58, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@47aac663, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7dd322a]
23:24:00.049 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6ef0e08f, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.049 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.049 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.051 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.069 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6ef0e08f, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.070 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4ef6a2fd, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.071 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.071 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.072 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.085 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4ef6a2fd, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.086 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6f37fb78, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.087 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.087 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.088 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.102 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6f37fb78, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.058 sec
Running net.kaczmarzyk.TypeMismatchE2eTest
23:24:00.105 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.105 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3a87c694, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ddb3312, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1d8f923f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@534b0af3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@57fcc568, org.springframework.test.context.transaction.TransactionalTestExecutionListener@43ab3f26, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@22d45306, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2943c93d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@18a59ef8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@26dc0c5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@221ffed, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@351cc4b5]
23:24:00.106 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@5f8b60f3, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.107 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.107 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.108 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.116 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@5f8b60f3, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.117 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1050f49, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.118 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.118 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.119 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.121 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:24:00.121 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'

23:24:00.124 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'

23:24:00.124 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:24:00.124 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in ()
23:24:00.129 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1050f49, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.130 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1ad66c9d, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.130 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.130 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.132 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.138 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1ad66c9d, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: invalid values present in the HTTP param; nested exception is class net.kaczmarzyk.spring.data.jpa.utils.Converter$ValuesRejectedException: invalid values present in the HTTP param, mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.139 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@7766f1c1, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.139 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.139 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.141 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.156 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@7766f1c1, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.157 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@3f5a8ea5, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.158 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.158 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.159 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:00.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '0'
          |  \-[NUM_INT] Node: '1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:00.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '0'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.162 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:00.162 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1 or upper(customer0_.first_name) like ?
23:24:00.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:00.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_LONG] Node: '1516L'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:00.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_LONG] LiteralNode: '1516'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:00.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1516 or upper(customer0_.first_name) like ?
23:24:00.169 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@3f5a8ea5, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec
Running net.kaczmarzyk.OrE2eTest
23:24:00.170 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.171 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@42a1c3ba, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c1ea0ab, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@33299272, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6bafbab8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@27df0864, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1efdefcc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61b85463, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@77544896, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2817f230, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5965eb71, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7a5db772, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2f985057]
23:24:00.172 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4134db1e testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@6b0e9e, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58984698 testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.173 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.173 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.174 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.176 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:24:00.176 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'upper'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'generatedAlias0'
          |  |        \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.176 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.177 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:24:00.177 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ? or upper(customer0_.last_name) like ?
23:24:00.181 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4134db1e testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@6b0e9e, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58984698 testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.NotNullE2eTest
23:24:00.183 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.183 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6ba68981, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3f64099c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1c08cd61, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@253646c2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7a832964, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6534e741, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f8d5d43, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@281a0c26, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4bb1d848, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@9fd2090, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5ccf13a9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@24cc4f2a]
23:24:00.184 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@12a148d0, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.184 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.184 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.186 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.192 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@12a148d0, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.193 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@7ef2f14e, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.194 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.194 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.195 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.201 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@7ef2f14e, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.202 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@52f93a84, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.202 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.202 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.203 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.209 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@52f93a84, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running net.kaczmarzyk.ComparableE2eTest
23:24:00.211 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.211 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@69f4fa56, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5a31d662, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@356be87, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6513699d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2bfb0923, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fad58f8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4939730c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3798a437, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@445911f6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5126fb1d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@53055326, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@21cefc6d]
23:24:00.212 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@4e637cdf, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.212 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.213 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.214 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:24:00.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:24:00.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:24:00.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=? and customer0_.registration_date<=?
23:24:00.221 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@4e637cdf, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.222 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7b1c2bf7, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.222 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.222 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.224 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.225 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:24:00.225 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:24:00.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name>=? and customer0_.first_name<=?
23:24:00.230 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7b1c2bf7, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.232 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7f6f4644, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.232 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.232 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.234 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.239 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7f6f4644, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running net.kaczmarzyk.JoinFetchE2eTest
23:24:00.240 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.240 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@46329e85, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@e840be5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@58f036de, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72ef3f9b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@207b41f5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@e8ebd3c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57913cf5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5c89c27b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@260754f6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5d1b7a57, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b38395, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@113b0382]
23:24:00.242 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@1b904438, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.242 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:00.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:00.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:00.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:24:00.251 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@1b904438, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.251 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@38f0bba, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.252 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.252 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.253 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:00.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:00.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:00.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:24:00.260 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@38f0bba, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.260 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@159c804c, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.261 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.261 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.262 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.264 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:24:00.265 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'lastName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:00.265 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:00.265 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:24:00.265 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.last_name=? order by customer0_.id asc
23:24:00.267 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:24:00.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:00.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:00.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:00.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where customer0_.last_name=?
23:24:00.274 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@159c804c, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running net.kaczmarzyk.AvoidingRedundantJoinE2eTest
23:24:00.275 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.276 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@73226368, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@501f21fe, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@78aa11f2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7c57c200, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1c0ed7c1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@35b7156f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1dbaa7aa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f3f31df, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35e55526, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@38f42298, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@703b55db, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@562c23ca]
23:24:00.277 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@7b32e17b, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.278 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.278 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.279 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:24:00.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'stars'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:00.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[person2_, movie0_], fromElementsByPath=[generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:00.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:24:00.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id where (person2_.name like ?) and 1=1
23:24:00.295 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@7b32e17b, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.296 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@25b4304c, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.297 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.297 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.298 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.301 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:24:00.301 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'stars'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'directors'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'name'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'name'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:00.302 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars,movie_directors)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[person2_, person4_, movie0_], fromElementsByPath=[generatedAlias0.directors, generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Movie.directors,tableName=person,tableAlias=person4_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'person4_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=person4_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'person4_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person4_}
          |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:00.302 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:24:00.302 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id where (person2_.name like ?) and (person4_.name like ?) and 1=1
23:24:00.310 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@25b4304c, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.311 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@617f817a, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.311 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:24:00.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Movie'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:24:00.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:24:00.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:24:00.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ where 1=1
23:24:00.320 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@617f817a, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 sec
Running net.kaczmarzyk.EqualE2eTest
23:24:00.322 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.322 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1ddf7d19, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@a809e74, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5bcc10fa, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1a8b3791, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7cdab66c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7227f4bd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@49d761c3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@aa3e0d7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@23635e39, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6e2cd4f4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1c07798b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@9b79784]
23:24:00.324 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2d06acfd, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.324 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.324 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.326 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.328 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:24:00.328 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:00.328 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.328 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:24:00.328 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name=?
23:24:00.333 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2d06acfd, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.334 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@6d6cd631, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.335 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.335 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.336 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.341 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@6d6cd631, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.343 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@3bbed4fa, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.343 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.343 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.345 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:24:00.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1920L'

23:24:00.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1920'

23:24:00.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:24:00.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1920
23:24:00.351 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@3bbed4fa, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.352 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@347a171e, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.353 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.353 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.354 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.360 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@347a171e, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec
Running net.kaczmarzyk.NotEqualE2ETest
23:24:00.361 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.362 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2bae60e8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75321ba4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@746be7ac, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1f6b8c1f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@471a163a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2290ca46, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@9ed1f3f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4a256169, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5d1915d1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@797f26ce, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@180aca39, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@79c5de78]
23:24:00.363 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@26b63bbb, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.364 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.365 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:24:00.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:00.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:24:00.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name<>?
23:24:00.374 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@26b63bbb, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.375 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@28a17e1, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.376 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.376 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.377 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.383 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@28a17e1, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.384 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@7a9f9364, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.384 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:24:00.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2012L'

23:24:00.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2012'

23:24:00.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:24:00.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>2012
23:24:00.392 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@7a9f9364, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.393 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@1f4fc447, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.393 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.393 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.401 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@1f4fc447, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
Running net.kaczmarzyk.PathVariableHandlingE2eTest
23:24:00.403 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.403 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@389a070e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@27241127, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5631baf5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f546133, org.springframework.test.context.support.DirtiesContextTestExecutionListener@379ebfa0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@30b43d5d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b89dfac, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17287617, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5589b8ed, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@44c639d4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6197fa5f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@35dba0b4]
23:24:00.404 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2eb37eee, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.405 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.405 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.410 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:24:00.410 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.410 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:24:00.411 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:24:00.412 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=?
23:24:00.427 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2eb37eee, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.428 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@6a8ea39d, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.429 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.429 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.430 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:24:00.437 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2081L'

23:24:00.437 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2081'

23:24:00.437 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:24:00.438 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2081
23:24:00.441 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@6a8ea39d, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.442 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@16869348, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.443 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.443 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.444 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.447 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:24:00.447 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2104L'

23:24:00.447 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2104'

23:24:00.447 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:24:00.447 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2104
23:24:00.451 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@16869348, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.451 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@25847567, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.452 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.452 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.453 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:24:00.456 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2127L'

23:24:00.456 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2127'

23:24:00.457 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:24:00.457 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2127
23:24:00.460 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@25847567, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.461 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@76140476, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.462 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.462 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.463 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.468 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@76140476, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 sec
Running net.kaczmarzyk.ConjunctionE2eTest
23:24:00.469 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.469 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2e86dfc5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3b88b5f8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@bc8921c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@57336465, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4f53f1b1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@310abad6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7e1d8699, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3241c573, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@62cf74f3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6f7be76, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@14ccd97f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@281aecc8]
23:24:00.470 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d4d4108 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@44bc7dc9, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@365b1eb5 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.471 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.471 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.472 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.474 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:24:00.474 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:00.475 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.475 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:24:00.475 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.last_name like ?) and (customer0_.street like ?)
23:24:00.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:24:00.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:24:00.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ? or customer0_.last_name like ?
23:24:00.486 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d4d4108 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@44bc7dc9, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@365b1eb5 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.NotEqualIgnoreCaseE2eTest
23:24:00.487 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.487 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3c929623, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@67b2ea33, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3891f024, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@667333f0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ef88293, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3e6b1a0d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@9ccdd34, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@765f934e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7c397b0c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1ae4bdf4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@752ee6e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7fe1dee9]
23:24:00.488 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5677182f, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.489 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.489 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.490 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.491 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.491 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.496 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5677182f, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.496 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5196c8c0, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.497 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.497 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.498 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.499 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.500 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.503 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5196c8c0, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.JoinE2eTest
23:24:00.504 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.505 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@617b1e76, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d0f96ac, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f880f30, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7c9055e6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@45a16cac, org.springframework.test.context.transaction.TransactionalTestExecutionListener@74aa2842, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7bd44868, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5951d91, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4b1fd583, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6e520c9a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@371c8e30, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ac864d7]
23:24:00.506 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@7931048d, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.506 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.506 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.508 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:24:00.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[LIKE] Node: 'like'
    |     +-[METHOD_CALL] Node: '('
    |     |  +-[IDENT] Node: 'upper'
    |     |  \-[EXPR_LIST] Node: 'exprList'
    |     |     \-[DOT] Node: '.'
    |     |        +-[IDENT] Node: 'generatedAlias1'
    |     |        \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:00.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[LIKE] BinaryLogicOperatorNode: 'like'
    |     +-[METHOD_CALL] MethodNode: '('
    |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |     |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:00.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:24:00.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ? order by customer0_.id asc
23:24:00.515 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@7931048d, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.516 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@45cdfb42, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.517 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.517 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.518 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:24:00.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias1'
          |        \-[IDENT] Node: 'itemName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:00.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:24:00.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ?
23:24:00.526 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@45cdfb42, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.527 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1b5b5ac9, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.527 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.527 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.529 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.533 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:24:00.533 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:00.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:00.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:24:00.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name in (?) order by customer0_.id asc
23:24:00.538 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1b5b5ac9, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.539 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@448dcc13, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.539 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.539 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.541 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.543 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:24:00.543 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias2'
    |     |  |  \-[IDENT] Node: 'itemName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias1'
    |        |  \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:00.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |     |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:00.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:24:00.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where orders2_.item_name like ? or orders1_.item_name=? order by customer0_.id asc
23:24:00.548 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@448dcc13, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.549 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@47e4126a, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.549 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.549 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.550 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:24:00.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias0'
    |     |  |  \-[IDENT] Node: 'firstName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'upper'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'generatedAlias1'
    |        |        \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:00.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:00.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:24:00.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where customer0_.first_name=? and (upper(orders1_.item_name) like ?) order by customer0_.id asc
23:24:00.557 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@47e4126a, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.558 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1006d396, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.558 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.560 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:24:00.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[OR] Node: 'or'
    |        +-[LIKE] Node: 'like'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'generatedAlias2'
    |        |  |  \-[IDENT] Node: 'itemName'
    |        |  \-[COLON] Node: ':'
    |        |     \-[IDENT] Node: 'param0'
    |        \-[EQ] Node: '='
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'generatedAlias1'
    |           |  \-[IDENT] Node: 'badgeType'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:00.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[OR] SqlNode: 'or'
    |        +-[LIKE] BinaryLogicOperatorNode: 'like'
    |        |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |        |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |        |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    |        \-[EQ] BinaryLogicOperatorNode: '='
    |           +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
    |           |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
    |           |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:00.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:24:00.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?) order by customer0_.id asc
23:24:00.567 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1006d396, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running net.kaczmarzyk.ConstValsE2eTest
23:24:00.570 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.570 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3a09c65, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@38b6b4fb, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6e5d2207, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f6ef272, org.springframework.test.context.support.DirtiesContextTestExecutionListener@582a1e4e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55b678dc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52fc2577, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7aa9b038, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72f9194d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@146fff56, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@270ba731, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1094fb98]
23:24:00.571 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@5d589727, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.572 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.572 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.573 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.579 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@5d589727, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.580 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@36a2bc42, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.580 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.580 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.582 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.584 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:24:00.584 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.584 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.584 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:24:00.584 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.street=?
23:24:00.588 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@36a2bc42, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.589 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@63cbd058, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.589 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.589 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.599 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@63cbd058, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.DefaultSpELValE2eTest
23:24:00.604 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.605 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@169043e3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2a428e3b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@69faebc2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@12bbf99e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6203f71, org.springframework.test.context.transaction.TransactionalTestExecutionListener@382d4ad8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@63702e4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4b0d7cb5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4c511912, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1ef8f1ca, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2066f0d3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@aed8be]
23:24:00.606 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@4407b019, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:24:00.607 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.607 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.608 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.614 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@4407b019, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.615 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3c2fdd04, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:24:00.616 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.616 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.624 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3c2fdd04, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.625 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@66d358cc, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:24:00.625 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.625 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.626 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.633 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@66d358cc, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.634 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@349cde1a, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:24:00.635 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.635 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.636 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.643 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@349cde1a, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.644 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3f7fbfba, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:24:00.644 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.644 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
23:24:00.657 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3f7fbfba, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.658 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6c84fdaa, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:24:00.658 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.658 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.660 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.666 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6c84fdaa, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest
23:24:00.668 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.668 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cdf5eed, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@15764a15, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@19d4057, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@647407b4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@625a05e1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@455bdd5d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2eafa259, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6aa2599f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@58e53c27, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@434fa353, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@10216c09, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68b7a133]
23:24:00.669 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@50e43637, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.670 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.670 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.671 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.676 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:24:00.676 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:00.677 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@70c2a046}

23:24:00.677 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:24:00.677 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:24:00.682 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@50e43637, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.682 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@c5ae854, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.683 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.683 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.692 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@c5ae854, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.693 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@231b1ae0, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.693 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.693 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.695 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.699 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:24:00.699 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[AND] Node: 'and'
             +-[OR] Node: 'or'
             |  +-[EQ] Node: '='
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  |  \-[IDENT] Node: 'lastName'
             |  |  \-[COLON] Node: ':'
             |  |     \-[IDENT] Node: 'param3'
             |  \-[EQ] Node: '='
             |     +-[DOT] Node: '.'
             |     |  +-[IDENT] Node: 'generatedAlias0'
             |     |  \-[IDENT] Node: 'firstName'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param4'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'gender'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param5'

23:24:00.700 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[AND] SqlNode: 'and'
             +-[OR] SqlNode: 'or'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param5, expectedType=org.hibernate.type.CustomType@70c2a046}

23:24:00.700 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:24:00.700 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.first_name like ?) and (customer0_.first_name like ?) and (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:24:00.704 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@231b1ae0, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.705 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@6271e058, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.706 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.706 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.707 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.716 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@6271e058, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest
23:24:00.717 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.718 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@16987824, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3f3cacde, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7f1d809e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7991877f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2c9d9931, org.springframework.test.context.transaction.TransactionalTestExecutionListener@761d8a20, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6517ed0d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10c834af, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@50dc7396, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4a0abf27, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@10af5cee, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@41937f18]
23:24:00.719 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28a9f772 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@21580cf2, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@51b9ee5e testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.719 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.719 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.721 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.729 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28a9f772 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@21580cf2, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@51b9ee5e testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest
23:24:00.730 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.730 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7e236f5f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7589fc89, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2977084e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@111698ac, org.springframework.test.context.support.DirtiesContextTestExecutionListener@74aa4446, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4efd93ee, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5f59d707, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7aafe7b8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5c0104df, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7ec19e52, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6f319f62, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6a26271b]
23:24:00.732 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@23fbc6b2, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.732 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.732 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.737 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:24:00.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gender'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:24:00.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? or customer0_.first_name like ?
23:24:00.743 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@23fbc6b2, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.744 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6bf552d2, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.744 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.744 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.745 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.747 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:24:00.747 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:00.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:24:00.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.gender=? or customer0_.first_name like ?) and customer0_.last_name=?
23:24:00.752 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6bf552d2, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.753 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6b2b46cf, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.753 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.753 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.754 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.764 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6b2b46cf, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.765 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@7c90e595, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.765 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.765 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.767 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.772 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@7c90e595, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.772 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@4821b5f9, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.773 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.773 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.782 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@4821b5f9, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest
23:24:00.784 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.785 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@63822d44, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12d89095, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7f3f5a67, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@731a83bd, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1007897, org.springframework.test.context.transaction.TransactionalTestExecutionListener@578a1c1a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@526388ee, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7543fe74, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7785e48b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@70685cad, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3e828eb6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54d8774c]
23:24:00.786 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3e65c397, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.787 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.787 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.788 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.792 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) )
23:24:00.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[IN] Node: 'in'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'weight'
          |  |  |  \-[IN_LIST] Node: 'inList'
          |  |  |     \-[NUM_INT] Node: '50'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[AND] Node: 'and'
             +-[EQ] Node: '='
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'gender'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param2'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param3'

23:24:00.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[IN] InLogicOperatorNode: 'in'
          |  |  |  +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |  |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |  |     \-[NUM_INT] LiteralNode: '50'
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[AND] SqlNode: 'and'
             +-[EQ] BinaryLogicOperatorNode: '='
             |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@70c2a046}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) )
23:24:00.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.weight in (50)) and (customer0_.first_name like ?) and customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?)
23:24:00.797 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3e65c397, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.798 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@7c5810e4, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.799 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.799 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.800 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.804 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:24:00.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'gender'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:24:00.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:24:00.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=? and (upper(customer0_.first_name) like ?)
23:24:00.809 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@7c5810e4, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.810 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@28f95943, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.810 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.810 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.812 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.813 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.occupation like :param4 )
23:24:00.813 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[AND] Node: 'and'
          |  |  |  +-[IN] Node: 'in'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  |  \-[IDENT] Node: 'weight'
          |  |  |  |  \-[IN_LIST] Node: 'inList'
          |  |  |  |     \-[NUM_INT] Node: '50'
          |  |  |  \-[LIKE] Node: 'like'
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |     |  \-[IDENT] Node: 'firstName'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'lastName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[AND] Node: 'and'
          |     +-[EQ] Node: '='
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |     |  |  \-[IDENT] Node: 'gender'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[LIKE] Node: 'like'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'firstName'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'occupation'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:24:00.814 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[AND] SqlNode: 'and'
          |  |  |  +-[IN] InLogicOperatorNode: 'in'
          |  |  |  |  +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |  |  |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |  |  |     \-[NUM_INT] LiteralNode: '50'
          |  |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[AND] SqlNode: 'and'
          |     +-[EQ] BinaryLogicOperatorNode: '='
          |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@70c2a046}
          |     \-[LIKE] BinaryLogicOperatorNode: 'like'
          |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.occupation' {propertyName=occupation,dereferenceType=PRIMITIVE,getPropertyPath=occupation,path=generatedAlias0.occupation,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'occupation' {originalText=occupation}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.814 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.occupation like :param4 )
23:24:00.814 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.weight in (50)) and (customer0_.first_name like ?) and customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.occupation like ?)
23:24:00.817 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@28f95943, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.818 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3daab09, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.818 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.818 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.820 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.828 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3daab09, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.828 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@75b76c78, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.829 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.829 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.830 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.832 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:24:00.832 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:00.832 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.833 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:24:00.833 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=?
23:24:00.836 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@75b76c78, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.837 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@445df038, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.837 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.837 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.840 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:24:00.848 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@445df038, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.849 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@64b6a7fb, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.849 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.849 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.859 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@64b6a7fb, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.860 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@4f80d322, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.861 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.862 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.868 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@4f80d322, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest
23:24:00.869 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.869 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6782d76e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@23466a0f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3e1e7aa2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@65ed2da6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@14a5bfd2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4a3b95b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@49251807, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@45a98c98, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ccbf0d0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@65bbf773, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@43f3ee3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@dfbbfb0]
23:24:00.870 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@5049c718, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.871 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.871 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.872 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.876 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:24:00.876 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'gender'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:00.877 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.877 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:24:00.877 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?
23:24:00.881 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@5049c718, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.882 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6b569a0f, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.882 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.882 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.919 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6b569a0f, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.920 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6fc471a8, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.921 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.926 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 ) ) and ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) )
23:24:00.926 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'lastName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'gender'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'firstName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param3'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param4'

23:24:00.927 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.927 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 ) ) and ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) )
23:24:00.927 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?) and (customer0_.first_name like ? or customer0_.first_name like ?)
23:24:00.931 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6fc471a8, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.932 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@1bdfa51f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.932 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.932 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.933 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.942 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@1bdfa51f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.073 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest
23:24:00.943 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:00.944 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@399daaa9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@68be0478, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c3fc2b0, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5cb13543, org.springframework.test.context.support.DirtiesContextTestExecutionListener@82d149e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@10a84c27, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@128026c0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@474e12fe, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@27a7676d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@753cceca, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6699408b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51f76744]
23:24:00.945 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4c810e2c, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.945 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.945 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.947 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.951 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( ( generatedAlias0.gender in (:param1) ) and ( generatedAlias0.firstName in (:param2) ) ) and ( generatedAlias2.badgeType=:param3 )
23:24:00.951 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[AND] Node: 'and'
          |     +-[IN] Node: 'in'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |     |  |  \-[IDENT] Node: 'gender'
          |     |  \-[IN_LIST] Node: 'inList'
          |     |     \-[COLON] Node: ':'
          |     |        \-[IDENT] Node: 'param1'
          |     \-[IN] Node: 'in'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'firstName'
          |        \-[IN_LIST] Node: 'inList'
          |           \-[COLON] Node: ':'
          |              \-[IDENT] Node: 'param2'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'badgeType'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:24:00.952 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, badges2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges2_ on customer0_.id=badges2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[AND] SqlNode: 'and'
          |     +-[IN] InLogicOperatorNode: 'in'
          |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     |  \-[IN_LIST] SqlNode: 'inList'
          |     |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}
          |     \-[IN] InLogicOperatorNode: 'in'
          |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |        \-[IN_LIST] SqlNode: 'inList'
          |           \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'badges2_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias2.badgeType,tableAlias=badges2_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'badges2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges2_}
             |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.952 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( ( generatedAlias0.gender in (:param1) ) and ( generatedAlias0.firstName in (:param2) ) ) and ( generatedAlias2.badgeType=:param3 )
23:24:00.952 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join badges badges2_ on customer0_.id=badges2_.customer_id where orders1_.item_name=? and (customer0_.gender in (?)) and (customer0_.first_name in (?)) and badges2_.badge_type=?
23:24:00.957 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4c810e2c, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.958 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1690283c, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.958 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.958 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.966 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1690283c, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.966 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@45fc10ea, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.967 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.967 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.968 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:00.976 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@45fc10ea, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.977 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1bd3701a, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.977 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.977 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.979 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.980 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:24:00.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:00.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:24:00.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and (customer0_.first_name like ?)
23:24:00.985 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1bd3701a, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.986 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@40c6afcf, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.986 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.988 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:00.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:24:00.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:00.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:24:00.993 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:24:00.993 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.gender=?
23:24:00.996 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@40c6afcf, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:00.997 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5a3ae48, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:00.997 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:00.997 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:00.999 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.007 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5a3ae48, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.007 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1c6d4f34, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.008 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.008 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.009 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.014 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1c6d4f34, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.015 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@bceee99, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.016 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.016 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.018 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.023 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@bceee99, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.024 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@51e74653, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.025 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.025 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.026 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.031 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:24:01.031 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'firstName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param1'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'lastName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param2'

23:24:01.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:01.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:24:01.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (customer0_.first_name like ? or customer0_.last_name like ?)
23:24:01.036 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@51e74653, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.036 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@fab9c32, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.037 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.037 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.038 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.043 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@fab9c32, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.044 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@3cd0df14, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.045 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.045 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.046 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.052 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@3cd0df14, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest
23:24:01.053 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.053 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1de0963a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4110a187, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4226618c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@57ba1828, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e7215a3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@aaa9973, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7b71a3ab, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c0d8fb5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@220c529a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7cb326a9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@a29be6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1a49f8b8]
23:24:01.055 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@5b45bcae, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.055 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.055 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.056 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:24:01.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |     |  \-[IDENT] Node: 'badgeType'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[NUM_INT] Node: '1'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:01.062 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[NUM_INT] LiteralNode: '1'
          |     \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:01.062 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:24:01.062 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and customer0_.last_name=?
23:24:01.066 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@5b45bcae, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.067 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@1cebff9f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.067 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.067 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.069 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.073 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:24:01.073 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias2'
             |  |  \-[IDENT] Node: 'itemName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param0'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias1'
                |  \-[IDENT] Node: 'badgeType'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param1'

23:24:01.073 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
                |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
                |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:01.074 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:24:01.074 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?)
23:24:01.078 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@1cebff9f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.079 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@53a0331a, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.079 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.079 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.080 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.085 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName like :param0 ) and ( 1=1 ) and ( generatedAlias2.badgeType=:param1 ) and ( 1=1 )
23:24:01.085 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:01.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, badges2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges2_ on customer0_.id=badges2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges2_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias2.badgeType,tableAlias=badges2_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'badges2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges2_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:01.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName like :param0 ) and ( 1=1 ) and ( generatedAlias2.badgeType=:param1 ) and ( 1=1 )
23:24:01.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join badges badges2_ on customer0_.id=badges2_.customer_id where (orders1_.item_name like ?) and 1=1 and badges2_.badge_type=? and 1=1
23:24:01.091 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@53a0331a, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.092 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@2b2cf103, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.092 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.092 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.094 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:24:01.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias1'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:01.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:01.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:24:01.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1
23:24:01.100 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@2b2cf103, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.101 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@4f0e977a, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.101 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.101 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.103 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.107 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:24:01.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias3'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias4'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[OR] Node: 'or'
          |  |  |  +-[LIKE] Node: 'like'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[EQ] Node: '='
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |     |  \-[IDENT] Node: 'badgeType'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param1'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[OR] Node: 'or'
          |     +-[LIKE] Node: 'like'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias4'
          |     |  |  \-[IDENT] Node: 'itemName'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[EQ] Node: '='
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias3'
          |        |  \-[IDENT] Node: 'badgeType'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:01.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=5, fromElements=5, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias4, generatedAlias3], fromElementByTableAlias=[orders2_, badges1_, orders4_, badges3_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges3_ on customer0_.id=badges3_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges3_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders4_ on customer0_.id=orders4_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias4,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders4_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[OR] SqlNode: 'or'
          |  |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[OR] SqlNode: 'or'
          |     +-[LIKE] BinaryLogicOperatorNode: 'like'
          |     |  +-[DOT] DotNode: 'orders4_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias4.itemName,tableAlias=orders4_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias4}
          |     |  |  +-[ALIAS_REF] IdentNode: 'orders4_.id' {alias=generatedAlias4, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders4_}
          |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          |     \-[EQ] BinaryLogicOperatorNode: '='
          |        +-[DOT] DotNode: 'badges3_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias3.badgeType,tableAlias=badges3_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias3}
          |        |  +-[ALIAS_REF] IdentNode: 'badges3_.id' {alias=generatedAlias3, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges3_}
          |        |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:01.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:24:01.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id left outer join badges badges3_ on customer0_.id=badges3_.customer_id left outer join orders orders4_ on customer0_.id=orders4_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and (orders4_.item_name like ? or badges3_.badge_type=?) and 1=1
23:24:01.113 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@4f0e977a, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest
23:24:01.115 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.115 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cd1d235, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1736262a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7252e063, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5edd0a7e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2c6f2bea, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ace5f3b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ffae7f9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@59428e82, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@c27de3b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@74e87f03, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c159b48, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ee3ad6]
23:24:01.116 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2de22551, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.117 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.117 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.118 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:24:01.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'badgeType'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'itemName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:01.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:01.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:24:01.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and orders2_.item_name=?
23:24:01.127 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2de22551, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.128 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@71b8c7c5, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.129 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.129 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.130 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.138 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@71b8c7c5, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.138 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@519c0918, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.139 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.139 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.140 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.144 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:24:01.145 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'badgeType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.145 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:01.145 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:24:01.145 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id where badges1_.badge_type=?
23:24:01.149 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@519c0918, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.150 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@3f8b8746, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.150 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.150 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.151 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.156 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@3f8b8746, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.157 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@14ca80b4, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.157 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.159 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.164 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@14ca80b4, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 sec
Running net.kaczmarzyk.e2e.converter.DateE2eTest
23:24:01.165 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.166 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7f475bd5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78a724c3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@f51c595, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@41717985, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ad1b8d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@45eda6e7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4411aea2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@e664af4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@627b59c6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4a0901f0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3a4d2ad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3f2919c7]
23:24:01.167 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@77fd4659 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@4c5aa9, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ec357e4 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.167 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.167 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.169 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.174 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@77fd4659 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@4c5aa9, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ec357e4 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.175 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@77fd4659 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@18c8cb7d, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ec357e4 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.175 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.175 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.176 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.182 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@77fd4659 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@18c8cb7d, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ec357e4 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.183 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@77fd4659 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@62c5255b, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ec357e4 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.183 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.183 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.185 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.189 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@77fd4659 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@62c5255b, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ec357e4 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest
23:24:01.192 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.193 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5239d115, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@39df2130, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2a5eac38, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ca97f0e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1084b6f7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5092d376, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ff28a30, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@48e4d5cf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7d62e12a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3bad9493, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@20953adc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4eb1c9ac]
23:24:01.194 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@54118bbf, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.194 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.194 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.196 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:24:01.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@73379057}

23:24:01.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:24:01.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time>?
23:24:01.202 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@54118bbf, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.203 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@1b4f6b6d, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.203 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.203 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.205 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.210 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@1b4f6b6d, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.211 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@18f7b7fd, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.211 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.211 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.212 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.214 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:24:01.214 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.214 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@73379057}

23:24:01.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:24:01.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time<?
23:24:01.218 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@18f7b7fd, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.219 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@177b38b9, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.219 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.219 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.220 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.225 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@177b38b9, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.225 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@b35ac04, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.226 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.226 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.227 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:24:01.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:01.230 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@73379057}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateTimeType@73379057}

23:24:01.230 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:24:01.230 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time between ? and ?
23:24:01.233 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@b35ac04, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.234 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@15f328aa, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.235 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.235 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.236 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.241 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b4c26ec testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@15f328aa, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40724ccd testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.052 sec
Running net.kaczmarzyk.e2e.converter.UUIDE2eTest
23:24:01.243 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.243 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6453dcc3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71d27cf4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@35a9e251, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7b17b5ba, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1d8cbdf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@638f22cc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@19ceff86, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5fb23360, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@18f38d7a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@27045ea, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6caca8ed, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@224bbf2b]
23:24:01.244 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@fb054f4, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.245 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.245 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.246 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:24:01.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1ffae821}

23:24:01.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:24:01.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code=?
23:24:01.253 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@fb054f4, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.254 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5544ea96, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.254 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.254 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.257 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:24:01.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:01.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1ffae821}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@1ffae821}

23:24:01.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:24:01.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code not in  (? , ?)
23:24:01.262 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5544ea96, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.263 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@7a417bb6, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.263 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.263 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:24:01.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1ffae821}

23:24:01.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:24:01.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code<>?
23:24:01.270 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@7a417bb6, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.271 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5b40c2a3, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.271 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.271 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.273 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.274 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:24:01.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:01.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1ffae821}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@1ffae821}

23:24:01.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:24:01.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code in (? , ?)
23:24:01.278 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3faa8fcd testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5b40c2a3, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3957c807 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running net.kaczmarzyk.e2e.converter.LocalDateE2eTest
23:24:01.280 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.280 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3ca81397, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@33e159a5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@8ecc81c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@876a3b3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@74be2d81, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4dab7ec2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@23e9f343, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1ebfb7b6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1be853c5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@da36314, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@613cfa08, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@25de39e]
23:24:01.281 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@6494eb8e, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.282 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.283 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:24:01.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:24:01.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:24:01.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>?
23:24:01.289 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@6494eb8e, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.290 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3a63d87e, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.290 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.290 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.293 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:24:01.293 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:24:01.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:24:01.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date<?
23:24:01.297 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3a63d87e, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.298 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@2ac665a, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.298 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.298 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.300 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.304 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@2ac665a, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.305 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4b6be6fc, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.305 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.305 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.307 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.311 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4b6be6fc, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.312 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@8742566, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.312 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.312 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.314 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:24:01.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:01.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:24:01.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:24:01.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date between ? and ?
23:24:01.320 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@8742566, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.321 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3d41e363, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.321 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.323 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.328 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1b62220a testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3d41e363, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b6194b5 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.e2e.converter.InstantE2eTest
23:24:01.329 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.329 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@ef77a7b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1fa6f90f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c47e5ec, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@40d67206, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7547fcc5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5d010de3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2e9afb2a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5d2ffabd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@17449409, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@42ffed17, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b451dc9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@191df20e]
23:24:01.331 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@50929c4c, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.331 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.331 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.332 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:24:01.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@c20a22f}

23:24:01.335 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:24:01.335 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant>?
23:24:01.338 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@50929c4c, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.339 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@e1cc4e5, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.339 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.339 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.341 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:24:01.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:01.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@c20a22f}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.InstantType@c20a22f}

23:24:01.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:24:01.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant between ? and ?
23:24:01.347 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@e1cc4e5, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.348 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@6cc86309, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.348 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.348 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.350 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.354 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@6cc86309, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.356 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@5bacbc0f, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.357 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.357 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.358 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:24:01.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@c20a22f}

23:24:01.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:24:01.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant<?
23:24:01.364 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@5bacbc0f, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.365 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@10a1e7d6, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.365 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.365 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.367 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.371 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@10a1e7d6, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.372 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@36e92f95, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.373 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.374 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.379 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20e1b9af testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@36e92f95, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d76ccb3 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec
Running net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest
23:24:01.380 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.380 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7fb4df04, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@192ac204, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c5623b4, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@39215bc9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6034ef16, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2fc13bf6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52f7e639, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@613b10bd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@26b01fd3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@88e78, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6da3766e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54242d9f]
23:24:01.382 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@7adea9d0, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.382 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.382 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.385 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:24:01.385 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.386 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@2f3df71a}

23:24:01.386 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:24:01.386 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer>?
23:24:01.389 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@7adea9d0, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.390 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@29a1d850, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.390 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:24:01.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@2f3df71a}

23:24:01.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:24:01.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer<?
23:24:01.398 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@29a1d850, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.399 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@71dbf2b3, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.400 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.400 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.401 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:24:01.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:01.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@2f3df71a}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.OffsetDateTimeType@2f3df71a}

23:24:01.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:24:01.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer between ? and ?
23:24:01.408 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@71dbf2b3, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.408 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3478b6a0, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.409 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.409 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.411 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.416 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3478b6a0, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.417 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@5ca28e44, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.417 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.423 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@5ca28e44, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.424 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@23eef910, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.424 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.424 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.426 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.430 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2deeb33f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@23eef910, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@129d27b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 sec
Running net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest
23:24:01.432 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.432 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11e02b0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a8aa326, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6089c37c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@46c03fe4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@37babe0e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1886b84c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@363a1a03, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@71422c3f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@13eab6d7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3e03283e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@588fd7ff, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@384c3b05]
23:24:01.564 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:24:01.579 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14ms. Found 3 repository interfaces.
23:24:01.613 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:24:01.639 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
23:24:01.640 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
23:24:01.650 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:24:01.665 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:24:01.716 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:24:01.716 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:24:01.834 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:24:01.838 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:24:01.893 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@216b8aa8 testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@36845587, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10c0cf8d testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16b6b70e]; rollback [true]
23:24:01.894 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.894 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.898 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:24:01.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:24:01.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'address'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:01.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.street' {propertyName=address,dereferenceType=COMPONENT,getPropertyPath=address,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'address' {originalText=address}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ComponentType@310bd2a8}

23:24:01.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:24:01.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street=?
23:24:01.905 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@216b8aa8 testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@36845587, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10c0cf8d testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.474 sec
Running net.kaczmarzyk.AndE2eTest
23:24:01.906 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.906 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4065717a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3b7bb63d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3e5e2f13, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3b28cc2b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@502d9495, org.springframework.test.context.transaction.TransactionalTestExecutionListener@36010af3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@79688d97, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4dc4f05, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3869fa37, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@681395b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b381829, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5d7adc2c]
23:24:01.908 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56bade54 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@7f72f7cb, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3838b2af testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.908 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.908 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.909 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.911 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:24:01.911 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:01.912 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:01.912 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:24:01.912 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?)
23:24:01.916 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56bade54 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@7f72f7cb, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3838b2af testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.utils.LoggedQueryTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.MultiLevelFetchJoinE2eTest
23:24:01.918 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:01.918 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2b2b2955, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@f927ead, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@f27e7d2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f832a1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@77ebd2ca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b90ad8c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5bb9ce5b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1f1092b7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@36447e1d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@58565994, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d088fd3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@569639ef]
23:24:01.920 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@568c3513, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.921 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:01.928 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:24:01.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
    |  |  |  |  \-[IDENT] Node: 'tags'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias3'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:01.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote4_.id as id1_6_3_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=4, fromElements=4, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias3], fromElementByTableAlias=[orders1_, ordernote4_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        +-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:01.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:24:01.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, ordernote4_.id as id1_6_3_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__, ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id where 1=1 order by customer0_.id asc
23:24:01.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:24:01.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'ItemTag'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:24:01.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'itemtag0_.id as id1_2_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag0_}
    |  \-[SQL_TOKEN] SqlFragment: 'itemtag0_.name as name2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[itemtag0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'item_tags itemtag0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=item_tags,tableAlias=itemtag0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}

23:24:01.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:24:01.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select itemtag0_.id as id1_2_, itemtag0_.name as name2_2_ from item_tags itemtag0_
23:24:01.970 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@568c3513, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:01.971 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@59e2bcdc, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:01.971 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:01.971 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:01.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:01.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:01.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:01.977 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:01.977 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:01.977 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:24:02.015 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@59e2bcdc, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:02.015 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@2f047a, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.016 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.016 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:02.032 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@2f047a, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:02.033 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@5f1b6fbf, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.033 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.033 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:02.048 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@5f1b6fbf, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:02.049 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@12d6aad5, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.049 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.049 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.051 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:02.054 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:24:02.055 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:24:02.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:24:02.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:24:02.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:24:02.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where 1=1
23:24:02.070 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6ed4d442 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@12d6aad5, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d3d0e88 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.154 sec
Running net.kaczmarzyk.DisjunctionE2eTest
23:24:02.071 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:02.072 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4f60df4a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3b839b10, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@25401d0b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@29cd9ce5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@601e9c19, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4762c011, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@62ef35b3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2700b7bf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@33ea1912, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@62593536, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7980c663, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5b1f3ba3]
23:24:02.073 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@261b4fa testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@3e978fa4, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ecf06ae testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.073 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.073 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.075 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:02.076 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:24:02.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gold'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'upper'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[DOT] Node: '.'
          |     |        +-[IDENT] Node: 'generatedAlias0'
          |     |        \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:02.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:24:02.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:24:02.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?) or upper(customer0_.first_name) like ?
23:24:02.081 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@261b4fa testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@3e978fa4, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ecf06ae testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.DateInclusiveE2eTest
23:24:02.082 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:02.082 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7ad1ece9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@65e4088f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@67bde84e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4b1eaf1e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e5db430, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7bb87304, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@734f0ba5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4d972c8d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1e38ed3b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@26209dab, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2db9a8e9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59be0a97]
23:24:02.084 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b0437f9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@582c3422, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@317245ac testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.084 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.085 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:02.090 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b0437f9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@582c3422, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@317245ac testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:02.091 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b0437f9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2c475325, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@317245ac testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.091 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.093 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:02.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:24:02.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LE] Node: '<='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:02.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LE] BinaryLogicOperatorNode: '<='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:24:02.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:24:02.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=? and customer0_.registration_date>=?
23:24:02.099 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b0437f9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2c475325, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@317245ac testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:02.099 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b0437f9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2f31f4ad, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@317245ac testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.100 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.100 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.102 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:02.106 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b0437f9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2f31f4ad, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@317245ac testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.IsNullE2eTest
23:24:02.108 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:02.108 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1a00c980, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2b7cdc47, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@18a83905, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@361986c2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ac90548, org.springframework.test.context.transaction.TransactionalTestExecutionListener@679a6ab2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3e231755, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@44f6b9c5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@26f71756, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@128c36c0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@34b3127b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@457aadb9]
23:24:02.109 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@14ebd598 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@5ace695, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2fa53dbc testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:24:02.109 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:02.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:02.111 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:02.117 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@14ebd598 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@5ace695, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2fa53dbc testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
23:24:02.134 [Thread-5] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:24:02.134 [Thread-1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:24:02.141 [Thread-5] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:24:02.141 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:24:02.142 [Thread-5] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:24:02.143 [Thread-1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:24:02.145 [Thread-1] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:24:02.146 [Thread-3] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:24:02.146 [Thread-3] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:24:02.146 [Thread-3] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:24:02.146 [Thread-3] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:24:02.171 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
23:24:02.171 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
23:24:02.172 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
23:24:02.185 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
23:24:02.185 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
23:24:02.185 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.

Results :

Tests run: 627, Failures: 0, Errors: 0, Skipped: 2

[INFO] 
[INFO] --- maven-license-plugin:1.10.b1:check (default) @ specification-arg-resolver ---
[INFO] Checking licenses...
[WARNING] Property 'strictCheck' is not enabled. Please consider adding <strictCheck>true</strictCheck> in your pom.xml file.
[WARNING] See http://code.google.com/p/maven-license-plugin/wiki/Configuration for more information.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  11.991 s
[INFO] Finished at: 2021-02-14T23:24:02Z
[INFO] ------------------------------------------------------------------------
