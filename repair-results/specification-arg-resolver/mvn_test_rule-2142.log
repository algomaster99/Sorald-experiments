[INFO] Scanning for projects...
[INFO] 
[INFO] -------------< net.kaczmarzyk:specification-arg-resolver >--------------
[INFO] Building specification-arg-resolver 2.6.3-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/specification-arg-resolver/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ specification-arg-resolver ---
[INFO] Surefire report directory: /workdir/specification-arg-resolver/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running net.kaczmarzyk.MultiLevelJoinE2eTest
23:21:03.347 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:03.367 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57a3e26a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75c56eb9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4bc222e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dc9b0f5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6531a794, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b5fad2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e17553a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3eb91815, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@56dc1551, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@102cec62, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74f6c5d8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@27912e3]
23:21:04.357 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:21:04.446 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83ms. Found 3 repository interfaces.
23:21:04.858 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:21:05.043 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
23:21:05.188 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
23:21:05.263 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:21:05.309 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.3.7.Final}
23:21:05.310 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
23:21:05.346 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
23:21:05.473 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:21:05.729 [main] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
23:21:06.118 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:21:06.120 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:21:07.006 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:21:07.042 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:21:07.277 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@277dddcf, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.283 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.283 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.293 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 10 ms
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils (file:/home/maven/.m2/repository/org/springframework/spring-core/5.1.4.RELEASE/spring-core-5.1.4.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
23:21:07.403 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:21:07.418 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:21:07.429 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[NE] Node: '<>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:07.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[NE] BinaryLogicOperatorNode: '<>'
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:07.468 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:21:07.468 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>? order by customer0_.id asc
23:21:07.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:21:07.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[NE] Node: '<>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:07.519 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[NE] BinaryLogicOperatorNode: '<>'
             +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:07.519 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:21:07.519 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>?
23:21:07.620 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@277dddcf, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.623 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@5c85ed05, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.623 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.623 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.625 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.649 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@5c85ed05, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.651 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@58e0f079, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.652 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.652 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.654 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.659 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:21:07.660 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:07.661 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:07.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:21:07.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name=? order by customer0_.id asc
23:21:07.677 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5825932c testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@58e0f079, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c01c2 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.608 sec
Running net.kaczmarzyk.NotInE2eTest
23:21:07.680 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:07.680 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b4b02d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1dd01876, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12d24c43, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6bf27411, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4a66949a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@57e83608, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57d8d8e2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2f726cf4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@514eefc4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4700db93, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@560e1459, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa7d7a0]
23:21:07.683 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@65e4eba5, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.684 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.696 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:21:07.696 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:07.698 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:07.698 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:21:07.699 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (?)
23:21:07.731 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@65e4eba5, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.733 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@34986491, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.734 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.734 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.736 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:21:07.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '78L'
             +-[NUM_LONG] Node: '93L'
             +-[NUM_LONG] Node: '86L'
             \-[NUM_LONG] Node: '99L'

23:21:07.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '78'
             +-[NUM_LONG] LiteralNode: '93'
             +-[NUM_LONG] LiteralNode: '86'
             \-[NUM_LONG] LiteralNode: '99'

23:21:07.744 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:21:07.744 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (78 , 93 , 86 , 99)
23:21:07.755 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@34986491, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.760 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@4a0dd851, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.761 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.761 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.763 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:21:07.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '101L'

23:21:07.770 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '101'

23:21:07.770 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:21:07.770 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (101)
23:21:07.785 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@4a0dd851, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.788 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1fcb01f8, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.789 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.789 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:21:07.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:07.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:07.809 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:21:07.809 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not in  (? , ?)
23:21:07.823 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1fcb01f8, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.827 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@528070fe, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.827 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.827 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.829 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.846 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@528070fe, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.848 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@688884e, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.848 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.848 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.864 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@688884e, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.870 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@613d42ab, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.871 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.872 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.874 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.879 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:21:07.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:07.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:07.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:21:07.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (? , ?)
23:21:07.891 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@613d42ab, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.894 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5629e904, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.895 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.897 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.910 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5629e904, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:07.912 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@8ae7e03, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:07.913 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:07.913 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:07.915 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:07.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:21:07.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '239L'
             +-[NUM_LONG] Node: '254L'
             +-[NUM_LONG] Node: '247L'
             \-[NUM_LONG] Node: '260L'

23:21:07.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '239'
             +-[NUM_LONG] LiteralNode: '254'
             +-[NUM_LONG] LiteralNode: '247'
             \-[NUM_LONG] LiteralNode: '260'

23:21:07.924 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:21:07.924 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (239 , 254 , 247 , 260)
23:21:07.943 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b9d85c2 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@8ae7e03, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77eb76f testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.257 sec
Running net.kaczmarzyk.ConstSpELValE2eTest
23:21:07.949 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:07.949 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6ccf06f1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6aefb242, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1455d0f5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5c4e86e7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@48a2fb11, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5fc82de5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@65208c91, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4d71476c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@125447a0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@cede70a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6dc8a602, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2a45c6f0]
23:21:08.123 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:21:08.144 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 3 repository interfaces.
23:21:08.191 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:21:08.222 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
23:21:08.223 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
23:21:08.269 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:21:08.285 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:21:08.354 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:21:08.354 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:21:08.482 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:21:08.487 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:21:08.558 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@770635f8, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:08.559 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.559 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.587 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:21:08.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:08.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:08.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:08.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:08.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:21:08.599 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@770635f8, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.600 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@10bf2726, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:08.601 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.601 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.603 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.613 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@10bf2726, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.614 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@3594b4b4, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:08.614 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.615 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.616 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:08.626 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@3594b4b4, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.628 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@1c0cba60, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:08.629 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.631 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.640 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:21:08.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:08.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@6a8b94b2}

23:21:08.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:21:08.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>=?
23:21:08.647 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@1c0cba60, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.648 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@3a69c81e, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:08.649 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.651 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.665 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@3a69c81e, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.667 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@76480730, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:08.668 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.668 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.669 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:08.679 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67599bae testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@76480730, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7887e1f3 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.735 sec
Running net.kaczmarzyk.DefaultValE2eTest
23:21:08.681 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:08.682 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7669d7a2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@724945, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@63c78e5e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5fc3b20b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67afba96, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7505ef47, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2a6f3ac7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@68fe866b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@729feae8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@283a5c2b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7bd0e2e9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6701fe26]
23:21:08.684 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7000df03 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@6daeaff2, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59aa646e testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.684 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.693 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:08.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:08.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:08.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:08.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:21:08.703 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7000df03 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@6daeaff2, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59aa646e testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.704 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7000df03 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@7d6f31ef, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59aa646e testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.704 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.704 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.706 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.718 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7000df03 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@7d6f31ef, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59aa646e testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running net.kaczmarzyk.InE2eTest
23:21:08.720 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:08.720 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7b3b763d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@34ceefb5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@461f295c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@50e0541, org.springframework.test.context.support.DirtiesContextTestExecutionListener@25a41143, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6654e105, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@59be715a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2cef4321, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@29c471f6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6859f102, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@424769f2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1467dcd0]
23:21:08.723 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@765650e4, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.723 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.723 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.725 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.729 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:21:08.730 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '107L'
             \-[NUM_LONG] Node: '122L'

23:21:08.730 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '107'
             \-[NUM_LONG] LiteralNode: '122'

23:21:08.731 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:21:08.731 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (107 , 122)
23:21:08.739 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@765650e4, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.740 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@75d454a4, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.741 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.741 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.743 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.747 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:21:08.747 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:08.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:08.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:21:08.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (? , ?)
23:21:08.756 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@75d454a4, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.758 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5a69f1ef, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.758 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.758 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.760 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.764 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:21:08.765 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:08.765 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:08.766 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:21:08.766 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ?)
23:21:08.773 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5a69f1ef, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.774 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@72b8b04f, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.775 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.775 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.777 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.780 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:21:08.781 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param2'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param3'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:21:08.782 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:08.782 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:21:08.782 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ? , ? , ?)
23:21:08.790 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@72b8b04f, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.792 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@4628344c, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.792 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.792 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.794 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:21:08.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '199L'
             \-[NUM_LONG] Node: '214L'

23:21:08.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '199'
             \-[NUM_LONG] LiteralNode: '214'

23:21:08.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:21:08.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (199 , 214)
23:21:08.807 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@4628344c, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.809 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5af535ff, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.809 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.809 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.811 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.822 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5af535ff, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.823 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@38691f8d, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.824 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.825 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:08.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:21:08.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '245L'

23:21:08.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '245'

23:21:08.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:21:08.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (245)
23:21:08.836 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@38691f8d, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.837 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@268bb09d, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.838 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.838 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:08.849 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@268bb09d, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.852 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5513745d, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.853 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.853 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.855 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:21:08.859 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:08.859 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:08.859 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:21:08.859 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ?)
23:21:08.866 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5513745d, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.868 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6eef7af3, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.868 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.868 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.870 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:21:08.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:08.874 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:08.874 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:21:08.874 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (? , ?)
23:21:08.882 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6eef7af3, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.884 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7158a28c, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.884 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.886 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:08.897 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7158a28c, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:08.898 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@edf68f5, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:08.899 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:08.899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:08.900 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:08.909 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26753687 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@edf68f5, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@307cf289 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.19 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceArgumentResolverTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running net.kaczmarzyk.spring.data.jpa.web.OrSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinsSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedAndSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedConjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.DisjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextPathVariableResolverTest
Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverSpecConstructorTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest
23:21:09.076 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.076 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2a87d40f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@586fe6ee, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@51dcf51b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6eb58fdd, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7a0619a8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5df9d890, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b3b9a19, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@29b23bc4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6333ac03, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@701dc5ad, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@474172e5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f951dd2]
23:21:09.078 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@fc6c83a, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.079 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.079 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.080 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.087 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@fc6c83a, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.088 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7d710482, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.088 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.088 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:09.092 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7d710482, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.093 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@3c5077f6, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.094 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.094 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.096 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.098 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@3c5077f6, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.099 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7aaec50e, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.100 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.100 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.101 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.103 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7aaec50e, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c156ea testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverPathVariablesTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest
23:21:09.108 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.108 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2f0170e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3829e6ca, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@403230be, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@60b03599, org.springframework.test.context.support.DirtiesContextTestExecutionListener@627a06e6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1592a3d5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44f4c619, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@25892fe3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@17765082, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@17fac5b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@75dc1d5a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1946d235]
23:21:09.109 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@dc6c5ca, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.110 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.110 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.112 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.114 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@dc6c5ca, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.115 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@4f168322, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.116 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.117 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.119 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@4f168322, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.120 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@3a273e53, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.121 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.121 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.123 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.125 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@3a273e53, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.126 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@38f2c97e, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:09.127 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.127 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.129 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.130 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@38f2c97e, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e620fe7 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.web.SpecificationArgumentResolverTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverOnTypeMismatchTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AndSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.ConjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.JoinSpecificationResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedDisjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedOrSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceWithComplexInheritanceTreeTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinFetchResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.ConverterFallbackMechanismTest
Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running net.kaczmarzyk.spring.data.jpa.utils.TypeUtilTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.PathVariableResolverTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.ConverterTest
Tests run: 24, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToInstantConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToOffsetDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.JoinPathUtilsTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest
23:21:09.237 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.237 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@146b3bc7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@200cdb37, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@523d6b45, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6e8e1a98, org.springframework.test.context.support.DirtiesContextTestExecutionListener@23f6a18d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@65e503a7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5cbb2b1d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@42ffa0c8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@54139bd3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@19a652cd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1cc07127, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@23867b97]
23:21:09.239 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@39c78cf9, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.240 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.240 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.241 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.243 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@39c78cf9, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.245 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@339b1c34, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.245 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.245 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.247 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.249 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@339b1c34, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.250 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@72e89ce2, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.250 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.250 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.252 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.253 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:21:09.254 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.254 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:09.254 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:21:09.254 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street not like ?
23:21:09.258 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@72e89ce2, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.259 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@112ec8a7, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.259 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.259 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.261 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.262 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:21:09.262 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.263 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:09.263 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:21:09.263 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not like ?
23:21:09.265 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:21:09.265 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:09.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:21:09.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not like ?
23:21:09.268 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7e9e73 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@112ec8a7, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@39993624 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionUnitTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.194 sec
Running net.kaczmarzyk.spring.data.jpa.domain.IsNullTest
23:21:09.464 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.464 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@720f29f0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7b3fd68e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7612a64b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2db6d66d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@26fd2a82, org.springframework.test.context.transaction.TransactionalTestExecutionListener@23f31375, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@40b0c9be, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5bae7a7b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1448e2b6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2f9b33f1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@69a0e285, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@41f53068]
23:21:09.466 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29400267 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@1b4695a, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@14b1c925 testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.466 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.466 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.470 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:21:09.470 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:21:09.471 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:21:09.471 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:21:09.472 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is null
23:21:09.474 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29400267 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@1b4695a, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@14b1c925 testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest
23:21:09.475 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.475 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@16019c16, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2b59285c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2ea7e25d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@692cab82, org.springframework.test.context.support.DirtiesContextTestExecutionListener@73d76b9d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@11aeb673, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@a0b11, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@c76c029, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4435c9b9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@204ce262, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@704e27f9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4a83c651]
23:21:09.477 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@1f953288, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.477 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.477 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.479 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.481 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@1f953288, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.482 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@3e759542, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.482 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.482 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.484 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.485 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@3e759542, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.487 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@129e564f, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.487 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.487 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.489 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:21:09.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'address'
          |        \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.491 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |        \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:09.492 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:21:09.492 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.street) like ?
23:21:09.496 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@129e564f, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.497 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@584bfadb, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.497 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.497 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.500 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:21:09.500 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:09.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:21:09.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name) like ?
23:21:09.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:21:09.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:09.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:21:09.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ?
23:21:09.506 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@321c6e0c testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@584bfadb, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30ca1686 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest
23:21:09.508 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.508 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@8d15c75, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5dcaa37a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@542aa32a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@55f0ba66, org.springframework.test.context.support.DirtiesContextTestExecutionListener@57c06659, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5f19dea8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5eab0592, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ed8a7ab, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5afefa87, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4b0393ee, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d829889, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ac9b6d]
23:21:09.510 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7ebd31df, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.510 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.510 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.512 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:09.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:09.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:09.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:09.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:21:09.532 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7ebd31df, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.533 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@3af64136, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.534 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.534 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.538 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:09.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.545 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.545 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:09.545 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:21:09.556 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@3af64136, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.560 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6288199, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.561 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.563 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:21:09.588 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6288199, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.590 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@22cc606d, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.590 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.590 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.592 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.603 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.603 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.604 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.604 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.604 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:21:09.608 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@22cc606d, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.609 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@485e52c9, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.610 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.610 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.612 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:09.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[IDENT] Node: 'generatedAlias0'

23:21:09.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:21:09.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:09.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:21:09.619 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@485e52c9, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.620 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5bcc2416, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.621 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.621 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.623 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:09.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:09.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:09.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:09.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:21:09.630 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5bcc2416, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.632 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@460fe6e3, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.632 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.632 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.634 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.636 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.638 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.638 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.638 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:21:09.643 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@460fe6e3, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.644 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@e2931b1, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.644 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.644 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.646 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.650 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@e2931b1, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.651 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@3c81a51a, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.651 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.651 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.653 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.656 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:09.656 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:21:09.657 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:21:09.657 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:09.657 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:21:09.660 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@3c81a51a, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.662 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@728c3a0e, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.662 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.662 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.666 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:09.667 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.668 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.668 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:09.668 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:21:09.674 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@728c3a0e, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.675 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7db99d41, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.678 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.678 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.680 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.684 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.689 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.690 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote2_.id as id1_6_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.690 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.690 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, ordernote2_.id as id1_6_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where 1=1 order by customer0_.id asc
23:21:09.694 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7db99d41, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.696 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@27cfc534, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.696 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.696 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.698 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.704 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@27cfc534, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.705 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@163427b6, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.705 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.705 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.707 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.709 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:21:09.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:21:09.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id order by customer0_.id asc
23:21:09.714 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@163427b6, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.715 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@325410ce, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.715 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.716 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.717 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:09.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:09.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:09.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:09.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:21:09.726 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@325410ce, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.727 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7d0e5fbb, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.728 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.728 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.729 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.734 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7d0e5fbb, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.736 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@173ee8f7, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.736 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.736 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.738 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.741 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.741 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:09.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:09.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:09.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id where 1=1 order by customer0_.id asc
23:21:09.746 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5710598e testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@173ee8f7, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a2763f8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.239 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest
23:21:09.748 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.749 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5f638200, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1cf44346, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3664d285, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e7967a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@46577744, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7807e2bb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@68e7f7c4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@510af8e4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2c1a48d6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6bcf75d4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3c41f6be, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3a8af40a]
23:21:09.751 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@69b783ea, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.753 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.753 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.754 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.755 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:21:09.756 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '0'
          \-[NUM_INT] Node: '1'

23:21:09.756 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '0'
          \-[NUM_INT] LiteralNode: '1'

23:21:09.757 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:21:09.757 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1
23:21:09.759 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@69b783ea, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.760 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@45220c67, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.761 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.761 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.762 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.763 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:21:09.764 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '539L'

23:21:09.764 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '539'

23:21:09.764 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:21:09.764 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=539
23:21:09.766 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@45220c67, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.767 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@405a2c7b, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.768 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.770 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.772 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@405a2c7b, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.774 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@15dcfe4e, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.774 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.781 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
23:21:09.783 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@15dcfe4e, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.785 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@6eb49e78, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.785 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.785 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.787 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.789 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@6eb49e78, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.790 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5a14682d, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.791 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.792 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.795 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5a14682d, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.796 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1b6c8641, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.796 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.796 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.798 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.800 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@625cb9b testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1b6c8641, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4076398b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest
23:21:09.802 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.802 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4cf7f5d8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5a172b6c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@29307ea4, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6fc31f6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75d64dc4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@16795459, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3c16cd6c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5b022899, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cfde650, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@40fab20a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4a8d6ad4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1c5fc]
23:21:09.805 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@e287fd1, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.805 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.805 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.807 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:21:09.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:09.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:21:09.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>=?
23:21:09.812 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@e287fd1, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.813 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3abc4498, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.813 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.813 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.815 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.816 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:21:09.816 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:21:09.817 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:21:09.817 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:21:09.817 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.21
23:21:09.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:21:09.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:21:09.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:21:09.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:21:09.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.2
23:21:09.822 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3abc4498, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.823 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@615ef647, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.823 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.823 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.825 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.825 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:21:09.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:21:09.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:21:09.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:21:09.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>=56
23:21:09.829 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@615ef647, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.830 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@27946cee, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.830 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.830 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.832 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.833 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:21:09.833 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '56'

23:21:09.833 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '56'

23:21:09.833 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:21:09.833 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>=56
23:21:09.836 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@27946cee, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.837 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@274ac029, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.837 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.837 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.840 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:21:09.840 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.840 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:09.840 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:21:09.840 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=?
23:21:09.844 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@274ac029, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.845 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3d446ba9, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.845 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.845 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.847 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.847 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:21:09.847 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.848 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:09.848 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:21:09.848 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>=?
23:21:09.851 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3d446ba9, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.853 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@6cce1f60, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.853 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.853 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.854 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.858 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@6cce1f60, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.859 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7aadb85, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.859 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.859 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:21:09.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:21:09.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:21:09.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:21:09.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.21
23:21:09.865 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:21:09.865 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0F'

23:21:09.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0'

23:21:09.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:21:09.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0
23:21:09.868 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:21:09.868 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.09F'

23:21:09.868 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.09'

23:21:09.868 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:21:09.868 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.09
23:21:09.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:21:09.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0999F'

23:21:09.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0999'

23:21:09.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:21:09.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0999
23:21:09.873 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7aadb85, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.874 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7dd43529, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.874 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.874 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.876 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:21:09.882 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.882 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:09.882 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:21:09.882 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>=?
23:21:09.885 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7dd43529, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.886 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@4e928f86, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.886 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.886 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.888 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.889 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:21:09.889 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '56'

23:21:09.889 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '56'

23:21:09.890 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:21:09.890 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>=56
23:21:09.892 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@4e928f86, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.893 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@37500808, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.894 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.894 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.896 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:21:09.896 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '593L'

23:21:09.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '593'

23:21:09.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:21:09.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>=593
23:21:09.899 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@37500808, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.900 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@76d448e6, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.901 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.901 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.902 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.903 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:21:09.903 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:09.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:21:09.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>=?
23:21:09.938 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@76d448e6, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.939 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@262ac4cc, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.940 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.942 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:21:09.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@6b3eb57}

23:21:09.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:21:09.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>=?
23:21:09.947 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@262ac4cc, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.948 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@59f41bcf, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.948 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.948 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.950 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.952 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@59f41bcf, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.954 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7f1bf2db, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.955 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.955 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.956 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.958 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7f1bf2db, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.960 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@148b13e5, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.960 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.962 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.964 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56fdb4db testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@148b13e5, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5839bf99 testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.163 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest
23:21:09.966 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.966 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5008c5a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5ffdea7c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2dadadd9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2d43bedb, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ca08575, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1cbe3497, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c3d91bc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6cb84986, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@449be249, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@296c6cc1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@196ca821, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@373636f3]
23:21:09.968 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@60aee4ca, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.968 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.968 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.970 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.972 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@60aee4ca, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.973 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@21f9d977, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.973 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.975 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:21:09.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:09.977 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:09.977 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:21:09.977 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=?
23:21:09.980 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@21f9d977, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.981 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@68d21554, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.981 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.981 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.983 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.985 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@68d21554, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:09.986 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@3374a30c, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.987 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.988 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:09.990 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@55623ed5 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@3374a30c, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a3a3b93 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NullTest
23:21:09.991 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:09.991 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@42491839, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@732af580, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@40bf2ead, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5ce76938, org.springframework.test.context.support.DirtiesContextTestExecutionListener@56653a4d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@72c743f4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4bb4c147, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2c7ddfa0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@53b52f30, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1b250e51, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@76f65a8b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34341b2a]
23:21:09.993 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@70d7282a testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@38c86702, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bd390b testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:09.993 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:09.993 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:09.995 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:09.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:21:09.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:21:09.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:21:09.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:21:09.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is not null
23:21:09.999 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@70d7282a testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@38c86702, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bd390b testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.000 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@70d7282a testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@253a2bfa, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bd390b testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.000 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.000 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.002 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.004 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@70d7282a testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@253a2bfa, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bd390b testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeTest
23:21:10.009 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.010 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3212ff1b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ba64e36, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6ba076ef, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3ececd11, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1b8117f4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@62af3d4c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ad038f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@42becaf6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@51934be2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4a4d59c1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4151af88, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@750c242e]
23:21:10.012 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@675f9bc6, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.012 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.012 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.014 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.015 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@675f9bc6, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.016 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@399fd2ab, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.017 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.018 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.020 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@399fd2ab, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.021 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4dd139e0, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.022 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.022 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.024 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:21:10.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:21:10.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street like ?
23:21:10.028 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4dd139e0, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.029 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@559ff07, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.029 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.029 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.031 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:21:10.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.033 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.033 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:21:10.033 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ?
23:21:10.034 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:21:10.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:21:10.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ?
23:21:10.038 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78c7928a testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@559ff07, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@27b8daa1 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest
23:21:10.039 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.039 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@34f14035, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@72efba55, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@307f6602, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3f314bad, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1ff4496, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ecd7bee, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@45c95343, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@70900474, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b303504, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6ec73d87, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@611b2857, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@11d823a4]
23:21:10.041 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@5c77cb42, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.041 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.041 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.043 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.044 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@5c77cb42, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.045 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@47a55fdf, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.046 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.046 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.047 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.049 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@47a55fdf, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.050 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@b2b3a40, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.050 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.050 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.052 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.053 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:21:10.054 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:10.055 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.055 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:21:10.055 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date between ? and ?
23:21:10.058 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@b2b3a40, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.059 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@1485c961, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.059 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.059 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.061 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.063 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@12e7664b testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@1485c961, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6c4d8b04 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest
23:21:10.065 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.065 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4cd78959, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@128acee, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4310d985, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@61e67cc1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@118bace5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55002de6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@10990a32, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@42cb7c94, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@eeb1cac, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5ad07f8a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2c03678, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1bf6c568]
23:21:10.067 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@26b78c2, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.067 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.067 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.069 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.071 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@26b78c2, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.072 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@7657cc5, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.072 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.072 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.074 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.074 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:21:10.075 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.076 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.076 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:21:10.076 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<?
23:21:10.082 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@7657cc5, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.083 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@6b85fabc, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.084 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.086 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.089 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@6b85fabc, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.090 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@51a94f7f, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.091 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.092 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.093 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a5b73cb testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@51a94f7f, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4b0fdbd7 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest
23:21:10.095 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.095 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6c54bc3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@dcaa310, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2492f6fb, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@155afbd7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@396d21ec, org.springframework.test.context.transaction.TransactionalTestExecutionListener@61e7d7f2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52f1d01b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10371dd1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@40053c7a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1f022bcf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@43af513c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6bde050d]
23:21:10.097 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@243d57d4, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.097 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.097 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.099 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.100 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@243d57d4, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.101 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@3a3a0b3b, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.102 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.102 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.103 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.105 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@3a3a0b3b, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.107 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@2c9c7f4a, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.107 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.107 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.112 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@2c9c7f4a, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.113 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@5e5616f2, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.113 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.113 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.115 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.119 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@5e5616f2, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@304394d8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest
23:21:10.120 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.120 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1eb08757, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4bcb5415, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@177aef4f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@61f94cac, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7be9e5fb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6a937d6f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ad3e7e5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@164523f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3596a9d5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@441fd20d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7146e9a4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5290b819]
23:21:10.122 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@68b2a686, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.123 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.123 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.124 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.126 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@68b2a686, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.127 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@a1a7e28, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.128 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.128 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.129 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:21:10.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:21:10.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>?
23:21:10.134 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@a1a7e28, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.135 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@79172834, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.136 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.136 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.140 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@79172834, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.141 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@3408de38, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.141 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.141 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.143 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.144 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@79b7aebc testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@3408de38, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aee292d testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.BetweenTest
23:21:10.145 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.146 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@43542dd7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@66143420, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6626204e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@645db77c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@60514b5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@41f79561, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1604e941, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1f6b4aaa, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@31e5554e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4c44928e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7dbb24a6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@38c00fa1]
23:21:10.147 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5467016f, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.148 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.148 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.149 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:21:10.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '70L'
          \-[NUM_LONG] Node: '100L'

23:21:10.151 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '70'
          \-[NUM_LONG] LiteralNode: '100'

23:21:10.151 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:21:10.151 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 70 and 100
23:21:10.153 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:21:10.153 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '85L'
          \-[NUM_LONG] Node: '400L'

23:21:10.153 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '85'
          \-[NUM_LONG] LiteralNode: '400'

23:21:10.154 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:21:10.154 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 85 and 400
23:21:10.155 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5467016f, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.157 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@70d8f66, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.157 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.159 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.160 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@70d8f66, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.161 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@1fe2da60, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.162 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.162 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.163 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.164 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:21:10.164 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '70.0F'
          \-[NUM_FLOAT] Node: '100.0F'

23:21:10.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '70.0'
          \-[NUM_FLOAT] LiteralNode: '100.0'

23:21:10.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:21:10.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 70.0 and 100.0
23:21:10.167 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:21:10.167 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '85.0F'
          \-[NUM_FLOAT] Node: '300.2F'

23:21:10.168 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '85.0'
          \-[NUM_FLOAT] LiteralNode: '300.2'

23:21:10.168 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:21:10.168 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 85.0 and 300.2
23:21:10.170 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@1fe2da60, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.171 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b6f1227, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.171 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.171 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.173 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:21:10.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:10.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@6b3eb57}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@6b3eb57}

23:21:10.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:21:10.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string between ? and ?
23:21:10.177 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b6f1227, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.183 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5b58b11f, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.183 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.183 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.185 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.185 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:21:10.186 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '70.0D'
          \-[NUM_DOUBLE] Node: '100.0D'

23:21:10.186 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '70.0'
          \-[NUM_DOUBLE] LiteralNode: '100.0'

23:21:10.186 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:21:10.186 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 70.0 and 100.0
23:21:10.188 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:21:10.189 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '85.0D'
          \-[NUM_DOUBLE] Node: '300.2D'

23:21:10.189 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '85.0'
          \-[NUM_DOUBLE] LiteralNode: '300.2'

23:21:10.189 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:21:10.189 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 85.0 and 300.2
23:21:10.191 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5b58b11f, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.192 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@404c8c9d, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.192 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.192 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.194 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:21:10.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:10.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:10.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:21:10.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender between ? and ?
23:21:10.198 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@404c8c9d, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.199 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@29c947d0, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.199 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.199 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.201 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:21:10.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '70BD'
          \-[NUM_BIG_DECIMAL] Node: '100BD'

23:21:10.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '70'
          \-[NUM_BIG_DECIMAL] LiteralNode: '100'

23:21:10.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:21:10.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 70 and 100
23:21:10.204 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:21:10.205 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '85BD'
          \-[NUM_BIG_DECIMAL] Node: '300.31BD'

23:21:10.205 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '85'
          \-[NUM_BIG_DECIMAL] LiteralNode: '300.31'

23:21:10.205 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:21:10.205 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 85 and 300.31
23:21:10.207 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@29c947d0, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.208 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@543e228c, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.209 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.210 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.212 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@543e228c, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.213 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2a6e710e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.213 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.213 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.215 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.219 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2a6e710e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.220 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2e51e263, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.220 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.220 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.222 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.224 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bab61e7 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2e51e263, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fbb3144 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.079 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest
23:21:10.226 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.226 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3b8bbfab, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3dbb7f60, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7803a877, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@67f3a068, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1e33dda, org.springframework.test.context.transaction.TransactionalTestExecutionListener@674502f9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2604e76, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@786a4eb2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@607fa188, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2fe235b4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2f71cdc0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5440942]
23:21:10.227 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@6e74628f, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.228 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.228 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.229 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.231 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@6e74628f, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.231 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@63734973, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.232 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.232 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.233 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.235 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@63734973, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.236 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@2653b95f, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.236 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.236 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.238 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.243 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@2653b95f, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.244 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1e55ee99, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.245 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.245 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.246 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.252 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22ce83d6 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1e55ee99, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12464b1c testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinTest
23:21:10.253 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.253 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@773faae8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@159e8432, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@34d5d5f7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@17eac1b5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1d88414a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7cd6e9dd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6636e1dd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@279063c7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@784df46e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@339e62bb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6277551c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@465d9cce]
23:21:10.255 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@50bf00c2, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.256 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.256 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.257 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:10.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:10.261 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:10.261 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:10.261 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:21:10.264 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@50bf00c2, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.265 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@1f628b31, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.266 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.267 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:21:10.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:10.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:10.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:21:10.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name=? order by customer0_.id asc
23:21:10.273 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@1f628b31, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.274 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6f4fa62f, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.274 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.274 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.276 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:10.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:10.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:10.280 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:10.280 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:21:10.282 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6f4fa62f, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.283 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@18084396, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.284 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.284 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.285 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:10.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:10.288 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:10.288 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:10.288 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:21:10.291 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@18084396, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.292 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@685d620a, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.293 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.293 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.294 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:21:10.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'title'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:10.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'ordernote2_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias2.title,tableAlias=ordernote2_,className=net.kaczmarzyk.spring.data.jpa.OrderNote,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'ordernote2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.OrderNote, tableAlias=ordernote2_}
    |     |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:10.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:21:10.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where ordernote2_.title=? order by customer0_.id asc
23:21:10.300 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@685d620a, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.302 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@3c69b875, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.302 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.302 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.304 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.307 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4337cf96 testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@3c69b875, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@171f9f2c testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running net.kaczmarzyk.spring.data.jpa.domain.InTest
23:21:10.308 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.309 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2cad213d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@54372b03, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f9b24ae, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6b21a869, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2e40d8f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@43c28101, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@350a7383, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@538ee7ab, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7b217a33, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2c3c36df, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4a4cdeb0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6edbdbed]
23:21:10.310 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@2d579733, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.311 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.312 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.315 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@2d579733, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.316 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@2453e3ce, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.316 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.316 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.318 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.319 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:21:10.319 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '807L'
             \-[NUM_LONG] Node: '808L'

23:21:10.319 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '807'
             \-[NUM_LONG] LiteralNode: '808'

23:21:10.319 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:21:10.319 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (12345 , 807 , 808)
23:21:10.322 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@2453e3ce, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.323 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@243fe859, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.323 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.323 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.325 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:21:10.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:10.327 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.327 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:21:10.327 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (?)
23:21:10.330 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@243fe859, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.331 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@141fc03a, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.331 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.332 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.333 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:21:10.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:10.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.335 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:21:10.335 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (? , ?)
23:21:10.336 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:21:10.336 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:10.337 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.337 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:21:10.337 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (?)
23:21:10.339 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@141fc03a, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.340 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@98be09f, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.340 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.340 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.342 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.345 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@98be09f, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.346 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@77c001d7, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.347 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.347 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.348 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.349 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:21:10.349 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:10.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:10.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:21:10.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (?)
23:21:10.353 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@77c001d7, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.354 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@702a2c6e, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.354 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.354 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.356 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.357 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:21:10.357 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:10.357 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.358 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:21:10.358 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold in (?)
23:21:10.360 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@702a2c6e, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.361 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7590ce28, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.361 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.361 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:21:10.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:21:10.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:21:10.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:21:10.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight in (121 , 65)
23:21:10.367 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7590ce28, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.368 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@14150a0a, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.368 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.368 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.370 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:21:10.371 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '835L'
             \-[NUM_LONG] Node: '836L'

23:21:10.371 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '835'
             \-[NUM_LONG] LiteralNode: '836'

23:21:10.371 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:21:10.371 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (835 , 836)
23:21:10.373 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c7ba58d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@14150a0a, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@282c2bbd testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest
23:21:10.375 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.375 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7e41619d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@49e11ca7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@30bb4248, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@65beeceb, org.springframework.test.context.support.DirtiesContextTestExecutionListener@10063448, org.springframework.test.context.transaction.TransactionalTestExecutionListener@51c316cb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3b00a7b9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@29cbdd86, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@84e1883, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41f2320f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7f7168e7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@8a1bd62]
23:21:10.376 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@38617f1c testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@102d4cea, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f519714 testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.377 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.377 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.378 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:10.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:10.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:10.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ? or customer0_.last_name like ?
23:21:10.384 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@38617f1c testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@102d4cea, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f519714 testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualTest
23:21:10.386 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.386 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3d8c55ff, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@33c2a762, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@62110754, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4111c517, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1eed4367, org.springframework.test.context.transaction.TransactionalTestExecutionListener@38321e6f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52f3859a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d05cbae, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@69075512, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41eeff3b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@fff7dc9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3c148f23]
23:21:10.388 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@40ccaefa, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.388 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.388 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.390 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:21:10.391 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.391 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.391 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:21:10.391 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=?
23:21:10.393 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@40ccaefa, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.394 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@5bd3d747, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.395 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.397 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.398 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@5bd3d747, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.399 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1f116973, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.400 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.400 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.401 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:21:10.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:21:10.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:21:10.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:21:10.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long=121
23:21:10.404 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1f116973, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.405 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@554bb231, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.406 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.408 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:21:10.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:21:10.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:21:10.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:21:10.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int=121
23:21:10.411 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@554bb231, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.412 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@7cb77d5, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.413 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.413 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.414 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.415 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:21:10.415 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:21:10.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:21:10.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:21:10.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double=121.2
23:21:10.418 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@7cb77d5, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.419 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3a657773, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.419 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:21:10.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.423 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:21:10.423 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date=?
23:21:10.425 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3a657773, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.426 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2c45de6e, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.427 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.427 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.428 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.431 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2c45de6e, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.433 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@630f24a5, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.433 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.433 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.435 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.437 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@630f24a5, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.438 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@52bf434b, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.439 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.439 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.440 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:21:10.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.442 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.442 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:21:10.442 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj=?
23:21:10.444 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@52bf434b, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.445 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2d66a5d3, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.445 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.447 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:21:10.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:21:10.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:21:10.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:21:10.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight=121
23:21:10.450 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2d66a5d3, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.452 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@35697f9e, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.452 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.452 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.454 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.454 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:21:10.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '884L'

23:21:10.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '884'

23:21:10.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:21:10.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=884
23:21:10.457 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@35697f9e, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.458 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@45ef4dcb, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.459 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.459 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.460 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:21:10.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:10.462 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:21:10.462 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=?
23:21:10.465 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aa8f19d testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@45ef4dcb, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d920227 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 13, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.08 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest
23:21:10.466 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.466 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@21e40707, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@92adb3b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3182b7a2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@677f1963, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6622f6b4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@398e1a48, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d95957c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2be33ac, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73d8f219, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3a4dea70, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@b42a630, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7892d7a7]
23:21:10.468 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@500a6c2f, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.468 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.470 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.472 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@500a6c2f, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.473 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@37c47166, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.473 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.473 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.475 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.478 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@37c47166, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.479 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@4d9ef371, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.480 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.480 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.482 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.484 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@4d9ef371, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.484 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@38a7f7a2, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.485 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.485 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.487 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.488 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@69894182 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@38a7f7a2, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67a02460 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest
23:21:10.489 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.489 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1962f55, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@16d8a25e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3bd6ce4e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@164fba04, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2693d31f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@750a4fc1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@78235b90, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@13d7410a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2b647344, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@c3745ae, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6e2a6063, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@47dcb3bd]
23:21:10.492 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@668c8c55, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.492 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.494 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:21:10.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:21:10.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)<>?
23:21:10.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:21:10.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:21:10.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)<>?
23:21:10.500 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@668c8c55, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.501 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@498c3adc, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.501 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.503 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:21:10.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:10.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:21:10.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<>?
23:21:10.506 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@498c3adc, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.507 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@d0da1d6, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.508 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.508 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.509 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:21:10.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:21:10.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<>?
23:21:10.513 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@d0da1d6, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.514 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@352b23dd, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.516 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.518 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@352b23dd, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.519 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@186f51bb, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.519 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.519 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.521 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.521 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:21:10.521 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:21:10.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:21:10.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:21:10.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<>121
23:21:10.524 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@186f51bb, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.525 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@5e4632cb, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.525 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.525 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.527 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:21:10.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:21:10.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:21:10.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:21:10.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<>121
23:21:10.530 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@5e4632cb, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.531 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1b018f9, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.532 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.532 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.534 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:21:10.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:21:10.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:21:10.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:21:10.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<>121.2
23:21:10.537 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1b018f9, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.538 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@16bee5fe, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.538 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.539 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.540 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:21:10.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:21:10.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<>?
23:21:10.543 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@16bee5fe, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.544 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@5c991516, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.545 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.545 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.546 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:21:10.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.548 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.548 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:21:10.548 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<>?
23:21:10.550 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@5c991516, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.551 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@6c4ffcf0, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.551 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.553 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.555 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@6c4ffcf0, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.556 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3bd8032e, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.556 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.558 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:21:10.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:21:10.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<>?
23:21:10.561 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3bd8032e, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.562 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@598de6bf, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.562 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.563 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.564 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:21:10.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:21:10.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:21:10.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:21:10.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<>121
23:21:10.567 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@598de6bf, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.568 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@23504729, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.569 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:21:10.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '940L'

23:21:10.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '940'

23:21:10.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:21:10.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>940
23:21:10.574 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@23504729, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.574 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@c32b8b0, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.575 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.575 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.576 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.579 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@31b9a628 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@c32b8b0, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bf3fe88 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.098 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest
23:21:10.581 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.581 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3730fb2f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8d95ac8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@689aab7b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@22be8211, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1267fcea, org.springframework.test.context.transaction.TransactionalTestExecutionListener@502afb74, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6dd65379, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b2eead8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1603d1fb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@11757914, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4e67bdd8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2d3f6e6]
23:21:10.582 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6f2f9ba4 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@5ff9bed6, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4be4680b testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.583 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.583 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.585 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:21:10.586 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'address'
          |  |  \-[IDENT] Node: 'street'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LT] Node: '<'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:10.586 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  |  \-[IDENT] IdentNode: 'street' {originalText=street}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LT] BinaryLogicOperatorNode: '<'
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.586 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:21:10.586 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.street like ?) and customer0_.registration_date<?
23:21:10.589 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6f2f9ba4 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@5ff9bed6, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4be4680b testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest
23:21:10.590 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.590 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4080ea09, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@67f3b72d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5b9fbaca, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e33a209, org.springframework.test.context.support.DirtiesContextTestExecutionListener@924c964, org.springframework.test.context.transaction.TransactionalTestExecutionListener@73145db2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@557bf0f0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@60b33bc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@294bb5f0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@786384a6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7215172a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2ddc5c07]
23:21:10.592 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@78a4764f, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.592 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.592 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.594 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.595 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@78a4764f, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.596 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@239678d, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.596 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.596 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.601 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@239678d, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.602 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@2f152472, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.602 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.602 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.604 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.606 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@2f152472, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.607 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5324647, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.607 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.607 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.609 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.610 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5bf394be testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5324647, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ef10390 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotNullTest
23:21:10.611 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.611 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@30749de8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6902e2bf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12e4c6de, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@75b41ff3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@61bb5770, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1f5246e2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b34a1e0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7eaa78f2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4591a080, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@48799b86, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@464c18c8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6b0c851b]
23:21:10.613 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@e77180e testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@20e25fe7, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@288cca9 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.613 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.613 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.615 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.617 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@e77180e testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@20e25fe7, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@288cca9 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.618 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@e77180e testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@69f6b00b, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@288cca9 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.618 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.620 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.622 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@e77180e testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@69f6b00b, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@288cca9 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanTest
23:21:10.623 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.623 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@54dd2962, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@181f61b4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c601487, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1e69a9c6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@23c21550, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4033d25d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@cbb32f0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f4f8d38, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6c946b14, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32ebfde1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@671275fe, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@44971269]
23:21:10.625 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@451a5843, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.625 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.625 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.627 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:21:10.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:21:10.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<?
23:21:10.635 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@451a5843, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.636 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@a0464ce, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.636 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.636 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.638 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.638 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:21:10.639 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.200100000000006D'

23:21:10.639 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.200100000000006'

23:21:10.639 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:21:10.639 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.200100000000006
23:21:10.640 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:21:10.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:21:10.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:21:10.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:21:10.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.2
23:21:10.644 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@a0464ce, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.645 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@69f4143, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.645 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.645 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.647 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.647 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:21:10.647 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:21:10.648 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:21:10.648 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:21:10.648 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<55
23:21:10.650 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@69f4143, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.651 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4426f362, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.651 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.651 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.653 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.654 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:21:10.654 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:21:10.654 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:21:10.654 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:21:10.654 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<55
23:21:10.656 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4426f362, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.657 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@7855167a, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.658 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.658 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.662 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@7855167a, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.663 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1b38563a, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.663 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.663 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.665 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.665 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:21:10.666 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.666 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.666 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:21:10.666 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<?
23:21:10.669 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1b38563a, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.670 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6ad57ee3, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.671 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.671 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.672 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.675 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6ad57ee3, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.676 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4b8816f7, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.676 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.676 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.678 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.678 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:21:10.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:21:10.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:21:10.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:21:10.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<65.21
23:21:10.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:21:10.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.0F'

23:21:10.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.0'

23:21:10.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:21:10.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<55.0
23:21:10.683 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4b8816f7, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.684 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@58f6f3e8, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.684 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:21:10.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.687 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.687 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:21:10.687 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<?
23:21:10.689 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@58f6f3e8, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.690 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@697633a, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.691 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.694 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:21:10.695 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:21:10.695 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:21:10.695 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:21:10.695 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<55
23:21:10.697 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@697633a, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.705 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@51f26df9, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.708 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.708 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.709 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.711 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:21:10.712 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1007L'

23:21:10.712 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1007'

23:21:10.712 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:21:10.712 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1007
23:21:10.714 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:21:10.714 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1009L'

23:21:10.714 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1009'

23:21:10.714 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:21:10.714 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1009
23:21:10.716 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@51f26df9, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.717 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6166edcf, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.718 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.718 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.719 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:21:10.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:10.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:21:10.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<?
23:21:10.726 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6166edcf, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.728 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@646af766, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.729 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.730 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.731 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.732 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:21:10.733 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@6b3eb57}

23:21:10.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:21:10.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<?
23:21:10.741 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@646af766, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.743 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@58292496, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.743 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.743 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.745 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.747 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@58292496, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.748 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4f9e42c4, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.749 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.749 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.751 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.752 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4f9e42c4, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.756 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@127b9bed, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.757 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.757 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.758 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.760 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e4c8583 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@127b9bed, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@4c843a4f testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.137 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest
23:21:10.762 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.762 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@78ac66e2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@59ae4a6f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3463d70a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@66a4e1ef, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7d2410af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5672c056, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c039615, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3d69bbe3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@60157589, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@20a569ad, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@40f6e092, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3030edcc]
23:21:10.764 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@581c7611, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.764 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.764 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.766 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:21:10.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:21:10.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>?
23:21:10.770 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@581c7611, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.771 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@78e1625f, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.772 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.772 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.773 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.774 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:21:10.774 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:21:10.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:21:10.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:21:10.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.21
23:21:10.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:21:10.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:21:10.777 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:21:10.777 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:21:10.777 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.2
23:21:10.778 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@78e1625f, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.780 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@22f8be7c, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.780 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.780 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.784 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
23:21:10.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:21:10.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:21:10.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:21:10.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:21:10.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>56
23:21:10.789 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@22f8be7c, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.790 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@36f3f2a8, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.791 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.792 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:21:10.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '65'

23:21:10.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '65'

23:21:10.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:21:10.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>65
23:21:10.796 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@36f3f2a8, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.797 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1e22a602, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.797 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.797 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.799 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.802 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1e22a602, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.803 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@532a48d4, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.803 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.803 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.805 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:21:10.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:21:10.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>?
23:21:10.809 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@532a48d4, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.810 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4966454a, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.810 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.810 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.811 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.815 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4966454a, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.817 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1a611ec7, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.817 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.819 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:21:10.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:21:10.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:21:10.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:21:10.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.21
23:21:10.821 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:21:10.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:21:10.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:21:10.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:21:10.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.1
23:21:10.825 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1a611ec7, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.826 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7647eff0, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.826 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.826 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.828 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:21:10.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:21:10.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>?
23:21:10.833 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7647eff0, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.834 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@46f31564, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.834 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.834 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.836 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:21:10.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '65'

23:21:10.838 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '65'

23:21:10.838 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:21:10.838 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>65
23:21:10.840 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@46f31564, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.841 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@47a246ec, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.841 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.843 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.844 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:21:10.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1073L'

23:21:10.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1073'

23:21:10.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:21:10.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>1073
23:21:10.848 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@47a246ec, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.849 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@74948d11, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.850 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.851 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.852 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:21:10.853 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:10.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:21:10.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>?
23:21:10.860 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@74948d11, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.861 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7a0daf3d, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.861 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.864 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:21:10.864 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:10.867 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@6b3eb57}

23:21:10.868 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:21:10.868 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>?
23:21:10.872 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7a0daf3d, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.873 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3a6f77a4, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.873 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.873 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.874 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.877 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3a6f77a4, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.878 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3e47d465, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.878 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.880 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.881 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3e47d465, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.886 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2a6ca8d0, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.887 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.887 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.888 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.891 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30cdd6f9 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2a6ca8d0, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@248cc861 testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.13 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotInTest
23:21:10.894 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.894 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3a0f0552, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@47b530e0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3171c5e6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4260de0d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@876686, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6e5b7446, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@513ad29e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15eefe02, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2ee6196f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1baab1b1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1c833e78, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7effdd04]
23:21:10.896 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2ff9e11e, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.897 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.897 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.898 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.900 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:21:10.900 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:10.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:10.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:21:10.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (? , ?)
23:21:10.904 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2ff9e11e, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.905 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5f9f6511, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.906 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.906 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.908 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:21:10.909 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '1099L'
             \-[NUM_LONG] Node: '1100L'

23:21:10.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '1099'
             \-[NUM_LONG] LiteralNode: '1100'

23:21:10.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:21:10.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (12345 , 1099 , 1100)
23:21:10.917 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5f9f6511, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.918 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4fe1238a, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.918 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.918 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.920 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:21:10.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:10.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:10.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:21:10.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (?)
23:21:10.924 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4fe1238a, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.926 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@441ccfd7, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.926 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.926 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.928 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:21:10.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:10.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:21:10.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (? , ?)
23:21:10.932 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:21:10.932 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:10.932 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:10.932 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:21:10.932 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (?)
23:21:10.934 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@441ccfd7, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.935 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@334f130d, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.936 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.936 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.937 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.940 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@334f130d, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.941 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1267348a, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.943 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.943 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.944 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.947 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1267348a, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.949 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@76225435, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.949 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.949 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.961 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 12 ms
23:21:10.961 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:21:10.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:10.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:10.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:21:10.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold not in  (?)
23:21:10.965 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@76225435, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.966 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@420e2daa, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.967 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.967 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.968 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:10.969 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:21:10.969 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:21:10.970 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:21:10.970 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:21:10.971 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight not in  (121 , 65)
23:21:10.973 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@420e2daa, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:10.985 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@72a2b17d, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:10.985 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:10.985 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:10.987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:10.987 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:21:10.988 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '1127L'
             \-[NUM_LONG] Node: '1128L'

23:21:10.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '1127'
             \-[NUM_LONG] LiteralNode: '1128'

23:21:10.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:21:10.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (1127 , 1128)
23:21:10.992 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2bc7e895 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@72a2b17d, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2d3c0f89 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.1 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest
23:21:10.994 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:10.994 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6e14a376, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@25fb28dd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5917b984, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4bc40cb8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@8019a5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c4164a8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@18fe293d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73344756, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@737935a4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@46a7b47, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6d340d36, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3cebe931]
23:21:11.005 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@50e1c39c, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.005 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.005 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.007 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.009 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@50e1c39c, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.010 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3f341562, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.011 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.011 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.012 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.019 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3f341562, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.020 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2a144ea0, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.021 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.021 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.024 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:11.027 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2a144ea0, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.028 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2bd13c, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.028 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.028 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.030 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.032 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7fb3e6b0 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2bd13c, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172249cd testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest
23:21:11.034 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.034 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7522ea53, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@52d48643, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@269bf0ac, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@47a0e73, org.springframework.test.context.support.DirtiesContextTestExecutionListener@66e81cdd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@10f868dd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@691ff4fe, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3d426638, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1b6a9bb9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4887a689, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5ea91363, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@70f4dd28]
23:21:11.035 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@54c9320c, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.036 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.036 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.037 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.038 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:21:11.038 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.039 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:11.039 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:21:11.039 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<=?
23:21:11.041 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@54c9320c, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.042 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@299f3c2, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.043 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.043 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.045 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.045 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:21:11.052 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:21:11.052 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:21:11.053 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:21:11.053 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=65.21
23:21:11.055 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:21:11.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:21:11.058 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:21:11.058 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:21:11.058 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=55.2
23:21:11.060 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@299f3c2, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.062 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@250cbcb9, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.063 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.063 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.064 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.065 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:21:11.065 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:21:11.066 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:21:11.066 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:21:11.066 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<=55
23:21:11.070 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@250cbcb9, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.071 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@406b5725, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.072 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.072 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.073 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.074 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:21:11.074 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:21:11.075 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:21:11.075 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:21:11.075 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<=55
23:21:11.078 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@406b5725, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.080 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@278758da, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.081 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.081 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:11.088 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@278758da, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.090 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2b2bcb4a, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.090 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.092 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.093 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:21:11.093 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:21:11.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<=?
23:21:11.104 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2b2bcb4a, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.106 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6814fe0e, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.107 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.107 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.108 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.116 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6814fe0e, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.118 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@35e50381, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.119 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.119 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.120 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.122 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:21:11.122 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:21:11.124 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:21:11.124 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:21:11.124 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=65.1
23:21:11.126 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:21:11.126 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.1F'

23:21:11.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.1'

23:21:11.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:21:11.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=55.1
23:21:11.129 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@35e50381, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.130 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@198fb504, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.131 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.131 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.133 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.133 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:21:11.134 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.134 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}

23:21:11.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:21:11.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<=?
23:21:11.138 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@198fb504, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.139 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1035ec3c, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.140 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.140 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.141 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:21:11.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:21:11.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:21:11.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:21:11.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<=55
23:21:11.145 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1035ec3c, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.147 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@98243dc, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.147 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.147 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.149 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:21:11.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1185L'

23:21:11.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1185'

23:21:11.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:21:11.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<=1185
23:21:11.153 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@98243dc, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.154 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@10b51115, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.155 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.155 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.156 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.157 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:21:11.157 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:11.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:21:11.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<=?
23:21:11.162 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@10b51115, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.163 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@5401976b, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.163 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.163 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.165 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:21:11.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.167 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@6b3eb57}

23:21:11.167 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:21:11.167 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<=?
23:21:11.170 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@5401976b, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.172 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@98e2a07, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.172 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.172 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.174 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.176 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@98e2a07, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.177 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@66a1fe88, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.177 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.177 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.179 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.180 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@66a1fe88, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.182 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@62c2a477, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.182 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.182 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.184 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.185 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a25c653 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@62c2a477, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@4df03572 testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.16 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest
23:21:11.186 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.187 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@63782ad0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@33ded464, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@52b23f41, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1f652362, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3de9a4f4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@78513ad9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3b5a4aa5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@d12009f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7d2ccbcd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@c5aa143, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@65bccd0f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78373fdf]
23:21:11.188 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@6c4fee11, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.189 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.189 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.191 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:21:11.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.192 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.192 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:21:11.192 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)=?
23:21:11.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:21:11.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:21:11.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)=?
23:21:11.196 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@6c4fee11, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.197 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@23bc053c, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.198 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.198 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.199 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.202 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@23bc053c, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.203 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@a26daf9, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.203 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.203 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.205 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.207 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@a26daf9, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.208 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@6c8eab63, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.209 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.211 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.212 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@6c8eab63, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.214 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@31ec9703, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.214 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.214 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.216 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.218 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@31ec9703, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.219 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7ec16640, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.220 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.220 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.221 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.224 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7ec16640, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.225 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7d352874, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.225 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.225 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.227 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.229 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7d352874, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.230 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@363b24aa, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.231 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.231 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.232 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.235 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@363b24aa, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.237 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7191c18b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.237 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.237 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.239 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.242 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7191c18b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.248 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7e3f7bde, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.248 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.248 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.250 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.252 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7e3f7bde, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.253 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@c17ef34, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.254 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.254 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.258 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@c17ef34, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.260 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@46b6e644, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.261 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.261 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.262 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.265 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@46b6e644, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.268 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1d6f8bad, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.268 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.268 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.270 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:21:11.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1255L'

23:21:11.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1255'

23:21:11.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:21:11.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1255
23:21:11.274 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1d6f8bad, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.282 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@82d6e07, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.282 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.284 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.287 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78887bee testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@82d6e07, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e3ba10a testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.094 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest
23:21:11.288 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.288 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@d1a17cc, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71fd650b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6a9f41ff, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ad92442, org.springframework.test.context.support.DirtiesContextTestExecutionListener@57a0f6a2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4d6f0460, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5def348b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1ed7e040, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4e1210de, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7beb4178, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5f0469e2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7e7047a2]
23:21:11.294 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@70d49a95, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.294 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.294 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.296 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.300 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@70d49a95, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.301 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@10ea88c7, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.301 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.301 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.303 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.305 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@10ea88c7, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.306 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@315ccea2, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.306 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.306 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.307 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.310 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@315ccea2, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.311 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6fc1a561, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.311 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.312 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.315 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6fc1a561, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.316 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@592bc6a7, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.317 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.317 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.318 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.321 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@592bc6a7, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.322 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@23685592, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.322 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.322 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.324 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.327 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@23685592, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.328 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4875012c, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.328 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.330 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.333 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4875012c, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.334 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@682d4502, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.334 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.334 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.336 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.340 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@682d4502, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.341 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@599cc8a8, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.341 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.341 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.343 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.349 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@599cc8a8, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.357 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6a3b205, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.357 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.358 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.359 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.361 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6a3b205, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.362 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@41a21205, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.363 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.366 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:11.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:21:11.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1293L'

23:21:11.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1293'

23:21:11.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:21:11.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>1293
23:21:11.369 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@41a21205, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.370 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@54a30614, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.371 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.371 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.376 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17d6e44 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@54a30614, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bb98b8a testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.088 sec
Running net.kaczmarzyk.EqualIgnoreCaseE2eTest
23:21:11.377 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.378 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2fc3d28, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2686ca, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7f0bd5ed, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5d30303, org.springframework.test.context.support.DirtiesContextTestExecutionListener@66257bec, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5281b134, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7384b234, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e526c5c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@23e58061, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7c329d38, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2a718598, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57bc2c06]
23:21:11.379 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c630bff testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@3447c3ed, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62065a8c testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.380 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.380 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.381 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.381 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.381 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.383 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.391 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c630bff testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@3447c3ed, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62065a8c testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.392 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c630bff testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@3382adc2, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62065a8c testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.393 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.393 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.394 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.395 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.398 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:11.409 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c630bff testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@3382adc2, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62065a8c testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.ParamSeparatorE2eTest
23:21:11.410 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.411 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1300bc97, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7001e12f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@187ee61a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3a6b8805, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2c997fdb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@536efbfe, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3ccf89bf, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5a021583, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3d02debf, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@199763ea, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@59d59316, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@13312ba2]
23:21:11.412 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22f1d27e testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@232a935, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1414800e testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.413 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.413 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.414 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:21:11.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'Customer'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:21:11.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}

23:21:11.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:21:11.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_
23:21:11.441 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22f1d27e testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@232a935, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1414800e testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.LikeE2eTest
23:21:11.442 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.443 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d707e72, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@17a027a7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@381602e1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@40c14f20, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e3c2aa4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@28b7afdb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@203ea126, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6acc424e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@357a3cb9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@202684ba, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@75443609, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7d12c4dd]
23:21:11.444 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@66bd32b1 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@1c9e9bfb, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@361398f6 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.444 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.444 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.470 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@66bd32b1 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@1c9e9bfb, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@361398f6 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running net.kaczmarzyk.NullE2eTest
23:21:11.477 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.477 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@9addea4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@715e518, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c6f49d1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4493ddbf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@23ac7377, org.springframework.test.context.transaction.TransactionalTestExecutionListener@bb96f3f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d0e8e58, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@47aac663, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7dd322a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@47dd6579, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2e484f94, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3fc00de0]
23:21:11.479 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44243d32 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6af761ba, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ea10f3 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.479 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.479 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.481 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.493 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44243d32 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6af761ba, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ea10f3 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.494 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44243d32 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@42adf242, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ea10f3 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.494 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.494 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.495 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.509 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44243d32 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@42adf242, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ea10f3 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.510 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44243d32 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@142db18c, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ea10f3 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.511 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.511 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.512 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.532 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44243d32 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@142db18c, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ea10f3 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec
Running net.kaczmarzyk.TypeMismatchE2eTest
23:21:11.533 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.533 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@534b0af3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@57fcc568, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@43ab3f26, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@22d45306, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2943c93d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@18a59ef8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26dc0c5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@221ffed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@351cc4b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@17adeb0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6dfd4db2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@60ae0977]
23:21:11.535 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@76be352d, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.535 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.535 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.537 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.542 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@76be352d, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.543 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@72154fa4, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.544 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.544 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.545 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:21:11.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'

23:21:11.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'

23:21:11.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:21:11.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in ()
23:21:11.551 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@72154fa4, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.552 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@6aae82b1, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.552 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.552 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.554 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.558 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@6aae82b1, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: invalid values present in the HTTP param; nested exception is class net.kaczmarzyk.spring.data.jpa.utils.Converter$ValuesRejectedException: invalid values present in the HTTP param, mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.559 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@5c064de1, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.559 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.560 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.567 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@5c064de1, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.568 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@6b3fa2ef, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.569 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:11.572 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '0'
          |  \-[NUM_INT] Node: '1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:11.573 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '0'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.573 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:11.573 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1 or upper(customer0_.first_name) like ?
23:21:11.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:11.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_LONG] Node: '1516L'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:11.578 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_LONG] LiteralNode: '1516'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.578 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:11.578 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1516 or upper(customer0_.first_name) like ?
23:21:11.581 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4cf22d79 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@6b3fa2ef, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72364ff1 testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.OrE2eTest
23:21:11.582 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.582 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6bafbab8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@27df0864, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1efdefcc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@61b85463, org.springframework.test.context.support.DirtiesContextTestExecutionListener@77544896, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2817f230, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5965eb71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7a5db772, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2f985057, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3809b1e6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4e41fbf5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59302368]
23:21:11.584 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52029f28 testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@3589425d, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dceb58c testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.584 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.584 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.586 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:21:11.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'upper'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'generatedAlias0'
          |  |        \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:11.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:21:11.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ? or upper(customer0_.last_name) like ?
23:21:11.593 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52029f28 testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@3589425d, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dceb58c testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.NotNullE2eTest
23:21:11.594 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.595 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@253646c2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a832964, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6534e741, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3f8d5d43, org.springframework.test.context.support.DirtiesContextTestExecutionListener@281a0c26, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4bb1d848, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@9fd2090, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5ccf13a9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@24cc4f2a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@61fab063, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@163f56c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2595ecb2]
23:21:11.597 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3ee31090 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@47f64e86, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f097960 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.597 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.597 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.605 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3ee31090 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@47f64e86, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f097960 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.606 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3ee31090 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@9cc7cda, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f097960 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.607 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.607 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.608 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.615 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3ee31090 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@9cc7cda, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f097960 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.616 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3ee31090 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@6a474e00, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f097960 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.616 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.616 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.625 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3ee31090 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@6a474e00, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f097960 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running net.kaczmarzyk.ComparableE2eTest
23:21:11.626 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.626 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6513699d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2bfb0923, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7fad58f8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4939730c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3798a437, org.springframework.test.context.transaction.TransactionalTestExecutionListener@445911f6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5126fb1d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53055326, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@21cefc6d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2d148f03, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4b0c67af, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@32e9818b]
23:21:11.627 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2f83346f testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@3a95bc49, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f45aa40 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.628 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.628 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:21:11.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:11.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:11.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:21:11.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=? and customer0_.registration_date<=?
23:21:11.637 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2f83346f testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@3a95bc49, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f45aa40 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.638 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2f83346f testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@5afc4816, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f45aa40 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.638 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.638 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.640 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:21:11.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:11.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:21:11.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name>=? and customer0_.first_name<=?
23:21:11.646 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2f83346f testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@5afc4816, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f45aa40 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.647 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2f83346f testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@612fe62e, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f45aa40 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.647 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.647 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.654 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2f83346f testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@612fe62e, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f45aa40 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.JoinFetchE2eTest
23:21:11.656 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.656 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@72ef3f9b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@207b41f5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@e8ebd3c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@57913cf5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5c89c27b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@260754f6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d1b7a57, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b38395, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@113b0382, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@d0745b7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@bc85f82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@14f8ca45]
23:21:11.657 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39fb9d55 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@3823e936, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@210bdb8e testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.658 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.658 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.661 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:11.661 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:11.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:21:11.667 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@39fb9d55 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@3823e936, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@210bdb8e testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.668 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39fb9d55 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@51e55964, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@210bdb8e testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.668 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.668 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.670 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.671 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:11.671 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:11.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:21:11.676 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@39fb9d55 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@51e55964, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@210bdb8e testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.677 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39fb9d55 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@46e241b, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@210bdb8e testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.677 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.677 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.679 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:21:11.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'lastName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:11.682 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:11.682 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:21:11.682 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.last_name=? order by customer0_.id asc
23:21:11.683 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:21:11.684 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:11.684 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:11.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where customer0_.last_name=?
23:21:11.695 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@39fb9d55 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@46e241b, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@210bdb8e testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 sec
Running net.kaczmarzyk.AvoidingRedundantJoinE2eTest
23:21:11.697 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.697 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7c57c200, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1c0ed7c1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@35b7156f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1dbaa7aa, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5f3f31df, org.springframework.test.context.transaction.TransactionalTestExecutionListener@35e55526, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@38f42298, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@703b55db, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@562c23ca, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@497f104c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@50060b19, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a39194f]
23:21:11.698 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@454009a0 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@483740d5, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24e25991 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.699 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.699 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:21:11.710 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'stars'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:21:11.711 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[person2_, movie0_], fromElementsByPath=[generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:21:11.711 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:21:11.711 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id where (person2_.name like ?) and 1=1
23:21:11.718 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@454009a0 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@483740d5, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24e25991 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.719 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@454009a0 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@9b44d4f, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24e25991 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.720 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.720 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.721 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.724 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:21:11.724 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'stars'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'directors'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'name'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'name'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:21:11.725 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars,movie_directors)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[person2_, person4_, movie0_], fromElementsByPath=[generatedAlias0.directors, generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Movie.directors,tableName=person,tableAlias=person4_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'person4_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=person4_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'person4_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person4_}
          |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:21:11.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:21:11.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id where (person2_.name like ?) and (person4_.name like ?) and 1=1
23:21:11.734 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@454009a0 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@9b44d4f, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24e25991 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.735 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@454009a0 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@3da33a9, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24e25991 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.735 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.735 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.736 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:21:11.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Movie'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:11.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:11.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:21:11.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ where 1=1
23:21:11.743 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@454009a0 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@3da33a9, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24e25991 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec
Running net.kaczmarzyk.EqualE2eTest
23:21:11.744 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.744 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1a8b3791, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7cdab66c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7227f4bd, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@49d761c3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@aa3e0d7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@23635e39, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6e2cd4f4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1c07798b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@9b79784, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@309c821d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@381f7b8e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1f739627]
23:21:11.746 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@70054599, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.746 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.746 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.748 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:21:11.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:21:11.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name=?
23:21:11.754 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@70054599, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.755 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@549ea731, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.756 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.756 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.757 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.762 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@549ea731, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.763 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2c0e38c2, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.764 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.764 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.765 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:21:11.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1920L'

23:21:11.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1920'

23:21:11.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:21:11.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1920
23:21:11.771 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2c0e38c2, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.772 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@78038d3e, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.773 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.773 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.780 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25169558 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@78038d3e, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fc6e20 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running net.kaczmarzyk.NotEqualE2ETest
23:21:11.781 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.781 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1f6b8c1f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@471a163a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2290ca46, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@9ed1f3f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4a256169, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5d1915d1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@797f26ce, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@180aca39, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@79c5de78, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6ce7fb0c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6caef908, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@223bbda6]
23:21:11.783 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@6315cb3c, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.783 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.783 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.785 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:21:11.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:21:11.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name<>?
23:21:11.793 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@6315cb3c, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.794 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@2b503b3b, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.794 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.795 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.796 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.802 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@2b503b3b, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.803 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@269e7c66, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.803 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.803 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.804 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:21:11.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2012L'

23:21:11.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2012'

23:21:11.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:21:11.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>2012
23:21:11.811 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@269e7c66, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.812 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@20d7df93, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.812 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.812 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.813 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.821 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4262ac5e testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@20d7df93, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@74694f06 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running net.kaczmarzyk.PathVariableHandlingE2eTest
23:21:11.822 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.822 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5f546133, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@379ebfa0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@30b43d5d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6b89dfac, org.springframework.test.context.support.DirtiesContextTestExecutionListener@17287617, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5589b8ed, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44c639d4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6197fa5f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35dba0b4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2d8d2832, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@58f0acce, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@66bf08d]
23:21:11.824 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@341df52, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.824 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.825 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:21:11.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:11.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:11.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:21:11.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=?
23:21:11.838 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@341df52, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.838 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@cbc4393, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.839 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.840 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:21:11.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2081L'

23:21:11.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2081'

23:21:11.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:21:11.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2081
23:21:11.847 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@cbc4393, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.848 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@4a192cc6, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.848 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.848 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.852 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:21:11.852 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2104L'

23:21:11.853 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2104'

23:21:11.853 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:21:11.853 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2104
23:21:11.857 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@4a192cc6, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.858 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@218c25b9, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.858 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.858 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.860 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:21:11.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2127L'

23:21:11.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2127'

23:21:11.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:21:11.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2127
23:21:11.866 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@218c25b9, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.867 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@ff2e200, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.867 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.867 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.869 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.873 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40fd8aa1 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@ff2e200, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b085da testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.052 sec
Running net.kaczmarzyk.ConjunctionE2eTest
23:21:11.874 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.874 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57336465, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4f53f1b1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@310abad6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7e1d8699, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3241c573, org.springframework.test.context.transaction.TransactionalTestExecutionListener@62cf74f3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6f7be76, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14ccd97f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@281aecc8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@31eb7dd4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@a547191, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78214685]
23:21:11.876 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25a5d43a testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@22678487, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@512e737 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.876 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.876 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.879 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:21:11.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:11.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:21:11.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.last_name like ?) and (customer0_.street like ?)
23:21:11.884 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:11.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:11.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:11.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ? or customer0_.last_name like ?
23:21:11.892 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25a5d43a testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@22678487, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@512e737 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.NotEqualIgnoreCaseE2eTest
23:21:11.893 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.893 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@667333f0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ef88293, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3e6b1a0d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@9ccdd34, org.springframework.test.context.support.DirtiesContextTestExecutionListener@765f934e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c397b0c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1ae4bdf4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@752ee6e1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7fe1dee9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@48b73b02, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@778324fd, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7518dd02]
23:21:11.894 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@14c5f96, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f1499f0 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.895 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.896 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.898 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.901 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@14c5f96, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f1499f0 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.902 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@10323056, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f1499f0 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.902 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.902 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.904 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.904 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.904 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.905 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.909 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@10323056, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f1499f0 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.JoinE2eTest
23:21:11.910 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.910 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7c9055e6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@45a16cac, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@74aa2842, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7bd44868, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5951d91, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b1fd583, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6e520c9a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@371c8e30, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1ac864d7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2fce09c0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5186e67f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2388f71]
23:21:11.912 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@27f8fdfb, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.912 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.914 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:21:11.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[LIKE] Node: 'like'
    |     +-[METHOD_CALL] Node: '('
    |     |  +-[IDENT] Node: 'upper'
    |     |  \-[EXPR_LIST] Node: 'exprList'
    |     |     \-[DOT] Node: '.'
    |     |        +-[IDENT] Node: 'generatedAlias1'
    |     |        \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:11.917 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[LIKE] BinaryLogicOperatorNode: 'like'
    |     +-[METHOD_CALL] MethodNode: '('
    |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |     |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:11.917 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:21:11.917 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ? order by customer0_.id asc
23:21:11.921 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@27f8fdfb, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.922 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@3c30a41b, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.922 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.924 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.928 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:21:11.928 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias1'
          |        \-[IDENT] Node: 'itemName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:11.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:21:11.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ?
23:21:11.932 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@3c30a41b, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.933 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@70fd626f, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.933 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.933 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.935 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:21:11.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:11.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:11.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:21:11.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name in (?) order by customer0_.id asc
23:21:11.944 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@70fd626f, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.944 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1b5a8687, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.945 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.945 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.947 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:21:11.949 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias2'
    |     |  |  \-[IDENT] Node: 'itemName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias1'
    |        |  \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:11.950 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |     |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:11.950 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:21:11.950 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where orders2_.item_name like ? or orders1_.item_name=? order by customer0_.id asc
23:21:11.954 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1b5a8687, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.955 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@7b595de, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.955 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.955 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.957 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.958 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:21:11.958 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias0'
    |     |  |  \-[IDENT] Node: 'firstName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'upper'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'generatedAlias1'
    |        |        \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:11.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:11.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:21:11.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where customer0_.first_name=? and (upper(orders1_.item_name) like ?) order by customer0_.id asc
23:21:11.963 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@7b595de, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.964 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@67aa514a, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.964 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.964 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.966 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.968 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:21:11.969 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[OR] Node: 'or'
    |        +-[LIKE] Node: 'like'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'generatedAlias2'
    |        |  |  \-[IDENT] Node: 'itemName'
    |        |  \-[COLON] Node: ':'
    |        |     \-[IDENT] Node: 'param0'
    |        \-[EQ] Node: '='
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'generatedAlias1'
    |           |  \-[IDENT] Node: 'badgeType'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:11.969 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[OR] SqlNode: 'or'
    |        +-[LIKE] BinaryLogicOperatorNode: 'like'
    |        |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |        |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |        |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
    |        \-[EQ] BinaryLogicOperatorNode: '='
    |           +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
    |           |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
    |           |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:11.969 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:21:11.969 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?) order by customer0_.id asc
23:21:11.974 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5e699edc testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@67aa514a, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@569c80e5 testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 sec
Running net.kaczmarzyk.ConstValsE2eTest
23:21:11.975 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:11.975 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5f6ef272, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@582a1e4e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@55b678dc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@52fc2577, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7aa9b038, org.springframework.test.context.transaction.TransactionalTestExecutionListener@72f9194d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@146fff56, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@270ba731, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1094fb98, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2a1dabb6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@416374ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3b2b71de]
23:21:11.977 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@71a69653 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@459cfed4, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ce4b8ef testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.977 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.977 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.979 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:11.985 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@71a69653 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@459cfed4, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ce4b8ef testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:11.986 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@71a69653 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@54583aa6, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ce4b8ef testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:11.986 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:11.987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:11.988 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:11.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:21:11.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:11.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:11.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:21:11.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.street=?
23:21:12.000 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@71a69653 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@54583aa6, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ce4b8ef testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.001 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@71a69653 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@7d64da06, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ce4b8ef testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.002 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.002 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.003 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.012 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@71a69653 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@7d64da06, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ce4b8ef testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running net.kaczmarzyk.DefaultSpELValE2eTest
23:21:12.014 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.014 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@12bbf99e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6203f71, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@382d4ad8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@63702e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4b0d7cb5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4c511912, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1ef8f1ca, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2066f0d3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@aed8be, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4473d830, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1ddc17d5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@aab9cd5]
23:21:12.015 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@792711c7, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:12.015 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.016 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.024 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@792711c7, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.024 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@2b96d5ea, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:12.025 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.025 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.026 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.033 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@2b96d5ea, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.033 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@61ed43ae, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:12.034 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.035 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.042 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@61ed43ae, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.043 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@5a5be2f6, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:12.043 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.043 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.045 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.051 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@5a5be2f6, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.051 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@5a3f9efa, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:12.052 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.052 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.053 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.060 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@5a3f9efa, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.061 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@a2c6068, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ac25491]; rollback [true]
23:21:12.061 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.061 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.062 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.069 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fee485b testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@a2c6068, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@59e182 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.058 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest
23:21:12.071 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.071 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@647407b4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@625a05e1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@455bdd5d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2eafa259, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6aa2599f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@58e53c27, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@434fa353, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10216c09, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@68b7a133, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1942bc06, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@27a9d146, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3cf3a09e]
23:21:12.072 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@156eb4cf, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.073 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.073 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.074 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.079 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:21:12.079 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:12.079 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:12.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:21:12.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:21:12.084 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@156eb4cf, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.085 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@24645461, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.086 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.086 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.087 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.096 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@24645461, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.096 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@96c36db, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.097 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.097 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.098 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:21:12.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[AND] Node: 'and'
             +-[OR] Node: 'or'
             |  +-[EQ] Node: '='
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  |  \-[IDENT] Node: 'lastName'
             |  |  \-[COLON] Node: ':'
             |  |     \-[IDENT] Node: 'param3'
             |  \-[EQ] Node: '='
             |     +-[DOT] Node: '.'
             |     |  +-[IDENT] Node: 'generatedAlias0'
             |     |  \-[IDENT] Node: 'firstName'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param4'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'gender'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param5'

23:21:12.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[AND] SqlNode: 'and'
             +-[OR] SqlNode: 'or'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param5, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:12.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:21:12.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.first_name like ?) and (customer0_.first_name like ?) and (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:21:12.108 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@96c36db, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.109 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@1d49806, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.109 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.111 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.119 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@1d49806, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@644a6ddb testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest
23:21:12.120 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.120 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7991877f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2c9d9931, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@761d8a20, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6517ed0d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@10c834af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@50dc7396, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4a0abf27, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10af5cee, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41937f18, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7260f47f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6d0c9e93, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@72ef7f0]
23:21:12.122 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@751fd568 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@126aaede, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@73b40ffd testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.122 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.122 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.124 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.132 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@751fd568 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@126aaede, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@73b40ffd testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest
23:21:12.133 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.133 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@111698ac, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74aa4446, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4efd93ee, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f59d707, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7aafe7b8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c0104df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7ec19e52, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6f319f62, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6a26271b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3ed5e17c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c94dbfa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2fbd9785]
23:21:12.134 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@31ab3dc7, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.135 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.135 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.144 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:21:12.145 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gender'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:12.146 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.147 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:21:12.147 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? or customer0_.first_name like ?
23:21:12.155 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@31ab3dc7, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.157 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6bbf9cb2, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.157 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.160 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:12.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:21:12.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:12.167 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.168 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:21:12.168 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.gender=? or customer0_.first_name like ?) and customer0_.last_name=?
23:21:12.178 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6bbf9cb2, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.180 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@5f3ecc1c, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.180 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.180 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.182 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.199 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@5f3ecc1c, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.200 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@1bac51bd, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.201 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.201 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.202 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.208 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@1bac51bd, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.209 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@3ecc4651, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.209 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.211 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.236 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@3ecc4651, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c18a316 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.104 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest
23:21:12.240 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.240 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@731a83bd, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1007897, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@578a1c1a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@526388ee, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7543fe74, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7785e48b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@70685cad, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3e828eb6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@54d8774c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ca160e0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3e1ec8ed, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@144316a6]
23:21:12.241 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@32bd7445, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.242 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.247 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param3 )
23:21:12.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[AND] Node: 'and'
          |  |     +-[EQ] Node: '='
          |  |     |  +-[DOT] Node: '.'
          |  |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  |  \-[IDENT] Node: 'gender'
          |  |     |  \-[COLON] Node: ':'
          |  |     |     \-[IDENT] Node: 'param1'
          |  |     \-[LIKE] Node: 'like'
          |  |        +-[DOT] Node: '.'
          |  |        |  +-[IDENT] Node: 'generatedAlias0'
          |  |        |  \-[IDENT] Node: 'firstName'
          |  |        \-[COLON] Node: ':'
          |  |           \-[IDENT] Node: 'param2'
          |  \-[IN] Node: 'in'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'weight'
          |     \-[IN_LIST] Node: 'inList'
          |        \-[NUM_INT] Node: '50'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:21:12.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[AND] SqlNode: 'and'
          |  |     +-[EQ] BinaryLogicOperatorNode: '='
          |  |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  |     \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |        \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[IN] InLogicOperatorNode: 'in'
          |     +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |     \-[IN_LIST] SqlNode: 'inList'
          |        \-[NUM_INT] LiteralNode: '50'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param3 )
23:21:12.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ?) and customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.weight in (50)) and customer0_.last_name=?
23:21:12.252 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@32bd7445, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.253 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@14747c05, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.254 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.254 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:21:12.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'gender'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:21:12.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:21:12.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=? and (upper(customer0_.first_name) like ?)
23:21:12.264 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@14747c05, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.265 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@2097dc16, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.265 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param3 ) and ( generatedAlias0.occupation like :param4 )
23:21:12.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[AND] Node: 'and'
          |  |  |  +-[LIKE] Node: 'like'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[AND] Node: 'and'
          |  |  |     +-[EQ] Node: '='
          |  |  |     |  +-[DOT] Node: '.'
          |  |  |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |     |  |  \-[IDENT] Node: 'gender'
          |  |  |     |  \-[COLON] Node: ':'
          |  |  |     |     \-[IDENT] Node: 'param1'
          |  |  |     \-[LIKE] Node: 'like'
          |  |  |        +-[DOT] Node: '.'
          |  |  |        |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |        |  \-[IDENT] Node: 'firstName'
          |  |  |        \-[COLON] Node: ':'
          |  |  |           \-[IDENT] Node: 'param2'
          |  |  \-[IN] Node: 'in'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'weight'
          |  |     \-[IN_LIST] Node: 'inList'
          |  |        \-[NUM_INT] Node: '50'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param3'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'occupation'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:21:12.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[AND] SqlNode: 'and'
          |  |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  |  \-[AND] SqlNode: 'and'
          |  |  |     +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  |  |     \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |        \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[IN] InLogicOperatorNode: 'in'
          |  |     +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |  |     \-[IN_LIST] SqlNode: 'inList'
          |  |        \-[NUM_INT] LiteralNode: '50'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.occupation' {propertyName=occupation,dereferenceType=PRIMITIVE,getPropertyPath=occupation,path=generatedAlias0.occupation,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'occupation' {originalText=occupation}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param3 ) and ( generatedAlias0.occupation like :param4 )
23:21:12.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ?) and customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.weight in (50)) and customer0_.last_name=? and (customer0_.occupation like ?)
23:21:12.273 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@2097dc16, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.274 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@4f347dbe, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.274 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.274 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.275 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.284 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@4f347dbe, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.285 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@11fe2600, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.285 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.285 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.287 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.288 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:21:12.288 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:12.289 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.289 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:21:12.289 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=?
23:21:12.293 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@11fe2600, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.294 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@203fde6a, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.294 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.294 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.295 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.303 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@203fde6a, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.304 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@49be17f6, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.305 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.305 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.306 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.315 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@49be17f6, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.315 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@11534eb1, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.316 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.316 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.317 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.322 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@11534eb1, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22d460fe testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.086 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest
23:21:12.324 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.324 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@65ed2da6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@14a5bfd2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4a3b95b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@49251807, org.springframework.test.context.support.DirtiesContextTestExecutionListener@45a98c98, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7ccbf0d0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@65bbf773, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@43f3ee3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@dfbbfb0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2e9583af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@142fe961, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@691a1521]
23:21:12.325 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@38bb4d4f, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.326 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.326 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.327 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:21:12.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'gender'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:12.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:21:12.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?
23:21:12.337 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@38bb4d4f, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.338 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@4ac5fab8, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.338 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.338 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.340 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.347 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@4ac5fab8, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.348 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@76e6e88b, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.349 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.349 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.350 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 ) ) and ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) )
23:21:12.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'lastName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'gender'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'firstName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param3'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param4'

23:21:12.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 ) ) and ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) )
23:21:12.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?) and (customer0_.first_name like ? or customer0_.first_name like ?)
23:21:12.359 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@76e6e88b, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.360 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@7710f9bb, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.360 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.360 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.362 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.369 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@7710f9bb, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26542c47 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest
23:21:12.371 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.371 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5cb13543, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@82d149e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@10a84c27, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@128026c0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@474e12fe, org.springframework.test.context.transaction.TransactionalTestExecutionListener@27a7676d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@753cceca, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6699408b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@51f76744, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4df7fe18, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5eae33f2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@721fadb4]
23:21:12.372 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@73469890, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.372 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.374 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 ) and ( ( generatedAlias0.gender in (:param2) ) and ( generatedAlias0.firstName in (:param3) ) )
23:21:12.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'badgeType'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'itemName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[AND] Node: 'and'
             +-[IN] Node: 'in'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'gender'
             |  \-[IN_LIST] Node: 'inList'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param2'
             \-[IN] Node: 'in'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[IN_LIST] Node: 'inList'
                   \-[COLON] Node: ':'
                      \-[IDENT] Node: 'param3'

23:21:12.379 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[AND] SqlNode: 'and'
             +-[IN] InLogicOperatorNode: 'in'
             |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             |  \-[IN_LIST] SqlNode: 'inList'
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@70c2a046}
             \-[IN] InLogicOperatorNode: 'in'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[IN_LIST] SqlNode: 'inList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.379 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 ) and ( ( generatedAlias0.gender in (:param2) ) and ( generatedAlias0.firstName in (:param3) ) )
23:21:12.379 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and orders2_.item_name=? and (customer0_.gender in (?)) and (customer0_.first_name in (?))
23:21:12.383 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@73469890, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.384 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@b11fcda, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.385 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.385 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.392 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@b11fcda, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.393 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@14e11cb7, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.394 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.394 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.403 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@14e11cb7, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.404 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1b42356e, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.404 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.404 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.407 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:21:12.407 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:12.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:21:12.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and (customer0_.first_name like ?)
23:21:12.412 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1b42356e, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.412 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@557f5cb4, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.413 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.413 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.414 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.418 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:21:12.419 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:12.419 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@70c2a046}

23:21:12.419 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:21:12.419 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.gender=?
23:21:12.423 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@557f5cb4, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.424 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@23a7e915, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.425 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.425 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.426 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.435 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@23a7e915, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.436 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@7f903d2d, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.436 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.436 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.438 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.443 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@7f903d2d, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.444 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@45546c34, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.445 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.445 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.452 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@45546c34, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.453 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4a6da3cd, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.453 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.453 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.455 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:21:12.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'firstName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param1'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'lastName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param2'

23:21:12.460 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.460 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:21:12.460 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (customer0_.first_name like ? or customer0_.last_name like ?)
23:21:12.464 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4a6da3cd, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.465 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@670d0f14, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.465 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.465 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.466 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.471 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@670d0f14, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.472 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5987e28d, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.473 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.473 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.474 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.480 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5987e28d, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@37f208ba testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.11 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest
23:21:12.481 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.481 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57ba1828, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e7215a3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@aaa9973, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7b71a3ab, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7c0d8fb5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@220c529a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7cb326a9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@a29be6f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1a49f8b8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5a11f1e9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3f72126c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@786f192b]
23:21:12.483 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@517b8342, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.483 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.483 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.484 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.489 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:21:12.489 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |     |  \-[IDENT] Node: 'badgeType'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[NUM_INT] Node: '1'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:12.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[NUM_INT] LiteralNode: '1'
          |     \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:21:12.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and customer0_.last_name=?
23:21:12.494 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@517b8342, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.494 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@3d01c301, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.495 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.495 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.496 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.500 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:21:12.500 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias2'
             |  |  \-[IDENT] Node: 'itemName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param0'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias1'
                |  \-[IDENT] Node: 'badgeType'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param1'

23:21:12.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
                |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
                |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:21:12.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?)
23:21:12.505 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@3d01c301, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.506 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@22b66bae, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.507 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.507 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.508 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.512 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( 1=1 ) and ( generatedAlias2.itemName like :param1 ) and ( 1=1 )
23:21:12.513 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'badgeType'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'itemName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:21:12.513 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:21:12.514 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( 1=1 ) and ( generatedAlias2.itemName like :param1 ) and ( 1=1 )
23:21:12.514 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and 1=1 and (orders2_.item_name like ?) and 1=1
23:21:12.517 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@22b66bae, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.518 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@13cf4876, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.519 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.519 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.520 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:21:12.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias1'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:21:12.522 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:21:12.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:21:12.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1
23:21:12.527 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@13cf4876, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.527 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@6228deac, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.528 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.528 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.529 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.533 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:21:12.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias3'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias4'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[OR] Node: 'or'
          |  |  |  +-[LIKE] Node: 'like'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[EQ] Node: '='
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |     |  \-[IDENT] Node: 'badgeType'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param1'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[OR] Node: 'or'
          |     +-[LIKE] Node: 'like'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias4'
          |     |  |  \-[IDENT] Node: 'itemName'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[EQ] Node: '='
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias3'
          |        |  \-[IDENT] Node: 'badgeType'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:21:12.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=5, fromElements=5, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias4, generatedAlias3], fromElementByTableAlias=[orders2_, badges1_, orders4_, badges3_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges3_ on customer0_.id=badges3_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges3_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders4_ on customer0_.id=orders4_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias4,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders4_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[OR] SqlNode: 'or'
          |  |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[OR] SqlNode: 'or'
          |     +-[LIKE] BinaryLogicOperatorNode: 'like'
          |     |  +-[DOT] DotNode: 'orders4_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias4.itemName,tableAlias=orders4_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias4}
          |     |  |  +-[ALIAS_REF] IdentNode: 'orders4_.id' {alias=generatedAlias4, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders4_}
          |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}
          |     \-[EQ] BinaryLogicOperatorNode: '='
          |        +-[DOT] DotNode: 'badges3_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias3.badgeType,tableAlias=badges3_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias3}
          |        |  +-[ALIAS_REF] IdentNode: 'badges3_.id' {alias=generatedAlias3, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges3_}
          |        |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:21:12.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:21:12.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id left outer join badges badges3_ on customer0_.id=badges3_.customer_id left outer join orders orders4_ on customer0_.id=orders4_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and (orders4_.item_name like ? or badges3_.badge_type=?) and 1=1
23:21:12.539 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@6228deac, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@272df50f testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest
23:21:12.541 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.541 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5edd0a7e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2c6f2bea, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@ace5f3b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6ffae7f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59428e82, org.springframework.test.context.transaction.TransactionalTestExecutionListener@c27de3b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74e87f03, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4c159b48, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1ee3ad6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@338afad6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4ad8bc3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@64829fc5]
23:21:12.542 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@5a00dab7, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.542 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.542 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.544 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:21:12.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'badgeType'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'itemName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:12.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:21:12.554 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and orders2_.item_name=?
23:21:12.558 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@5a00dab7, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.559 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@7994c28a, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.559 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.559 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.568 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@7994c28a, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.569 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2007a050, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.569 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.574 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:21:12.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'badgeType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:12.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:21:12.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id where badges1_.badge_type=?
23:21:12.579 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2007a050, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.580 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@65209097, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.580 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.580 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.581 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.586 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@65209097, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.587 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@75d1477a, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.587 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.587 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.589 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.593 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@75d1477a, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6674a40b testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 sec
Running net.kaczmarzyk.e2e.converter.DateE2eTest
23:21:12.595 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.595 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@41717985, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ad1b8d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@45eda6e7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4411aea2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@e664af4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@627b59c6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4a0901f0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3a4d2ad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3f2919c7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a4c28d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a04508, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2034ceab]
23:21:12.596 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@66f4c5cb, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.596 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.596 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.603 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@66f4c5cb, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.603 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@53b9d387, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.604 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.604 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.606 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.612 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@53b9d387, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.613 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@6c2b5639, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.613 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.613 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.615 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.619 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@6c2b5639, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest
23:21:12.621 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.621 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@ca97f0e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1084b6f7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5092d376, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ff28a30, org.springframework.test.context.support.DirtiesContextTestExecutionListener@48e4d5cf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d62e12a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3bad9493, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@20953adc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4eb1c9ac, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@24300ae1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@736e0bf8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a249c93]
23:21:12.622 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@35f045d, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.622 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.622 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.624 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:21:12.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}

23:21:12.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:21:12.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time>?
23:21:12.630 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@35f045d, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.631 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4da18e2c, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.631 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.631 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.633 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.637 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4da18e2c, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.638 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@318d441f, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.639 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.639 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.640 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:21:12.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}

23:21:12.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:21:12.642 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time<?
23:21:12.646 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@318d441f, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.647 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@49d61ca8, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.647 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.647 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.653 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@49d61ca8, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.654 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@5b4a84c0, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.654 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.654 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.656 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.657 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:21:12.657 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:12.658 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}

23:21:12.658 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:21:12.658 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time between ? and ?
23:21:12.661 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@5b4a84c0, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.662 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4a38e868, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.662 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.662 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.669 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4a38e868, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec
Running net.kaczmarzyk.e2e.converter.UUIDE2eTest
23:21:12.670 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.670 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7b17b5ba, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1d8cbdf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@638f22cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@19ceff86, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5fb23360, org.springframework.test.context.transaction.TransactionalTestExecutionListener@18f38d7a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@27045ea, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6caca8ed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@224bbf2b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@26d76e45, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@26883060, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2f6a0f9c]
23:21:12.672 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5437eaca, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.672 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.672 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.674 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.676 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:21:12.676 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.676 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:21:12.676 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:21:12.676 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code=?
23:21:12.680 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5437eaca, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.681 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@65df014, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.682 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.682 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.683 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:21:12.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:12.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:21:12.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:21:12.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code not in  (? , ?)
23:21:12.689 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@65df014, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.690 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@799ace5b, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.690 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.690 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.693 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:21:12.693 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:21:12.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:21:12.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code<>?
23:21:12.704 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@799ace5b, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.705 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@a50da66, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.705 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.705 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.707 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.709 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:21:12.709 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:12.709 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:21:12.709 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:21:12.709 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code in (? , ?)
23:21:12.713 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@a50da66, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
Running net.kaczmarzyk.e2e.converter.LocalDateE2eTest
23:21:12.714 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.714 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@876a3b3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74be2d81, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4dab7ec2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@23e9f343, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1ebfb7b6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1be853c5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@da36314, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@613cfa08, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@25de39e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b72fe6b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4ddf9dd2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4b35d2db]
23:21:12.716 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@529d2e69, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.716 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.716 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.718 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:21:12.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@6a8b94b2}

23:21:12.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:21:12.720 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>?
23:21:12.723 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@529d2e69, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.724 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@a6c816a, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.724 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.724 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.726 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.727 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:21:12.727 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.728 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@6a8b94b2}

23:21:12.728 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:21:12.728 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date<?
23:21:12.731 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@a6c816a, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.732 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4ffb96e3, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.732 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.732 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.734 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.738 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4ffb96e3, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.739 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@6adaccf5, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.740 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.740 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.741 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.746 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@6adaccf5, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.747 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@e7a966e, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.747 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.747 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.748 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:21:12.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:12.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@6a8b94b2}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateType@6a8b94b2}

23:21:12.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:21:12.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date between ? and ?
23:21:12.755 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@e7a966e, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.756 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@1bd61926, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.756 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.756 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.758 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.763 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@1bd61926, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.e2e.converter.InstantE2eTest
23:21:12.764 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.764 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@40d67206, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7547fcc5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5d010de3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2e9afb2a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5d2ffabd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@17449409, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@42ffed17, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b451dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@191df20e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2acad9f8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@17600ee3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4d8e293]
23:21:12.765 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@727782da, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.766 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.766 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.767 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:21:12.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@2cc30d13}

23:21:12.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:21:12.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant>?
23:21:12.773 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@727782da, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.774 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@fc544d4, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.774 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.776 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.777 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:21:12.777 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:12.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@2cc30d13}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.InstantType@2cc30d13}

23:21:12.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:21:12.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant between ? and ?
23:21:12.781 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@fc544d4, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.782 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@c841ea3, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.783 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.783 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.784 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.789 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@c841ea3, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.790 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@7e4d743c, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.790 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.790 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.792 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:21:12.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@2cc30d13}

23:21:12.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:21:12.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant<?
23:21:12.797 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@7e4d743c, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.798 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@493626bc, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.798 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.798 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.800 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.804 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@493626bc, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.805 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@42b8bc3a, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.806 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.806 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.807 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.812 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@42b8bc3a, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest
23:21:12.813 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.813 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@39215bc9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6034ef16, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2fc13bf6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@52f7e639, org.springframework.test.context.support.DirtiesContextTestExecutionListener@613b10bd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@26b01fd3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@88e78, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6da3766e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@54242d9f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@72ccfe4f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3673c520, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4095c586]
23:21:12.815 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@511c856b, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.815 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.815 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.818 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:21:12.818 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}

23:21:12.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:21:12.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer>?
23:21:12.823 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@511c856b, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.823 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@4b0ed578, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.824 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.825 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.827 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:21:12.827 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:12.827 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}

23:21:12.827 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:21:12.827 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer<?
23:21:12.831 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@4b0ed578, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.832 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@ed870c0, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.832 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.832 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.834 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:21:12.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:12.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}

23:21:12.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:21:12.837 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer between ? and ?
23:21:12.840 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@ed870c0, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.841 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46db5b93, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.841 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.843 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:12.848 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46db5b93, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.848 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46f358a9, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.849 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.849 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.855 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46f358a9, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:12.856 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@1db9b7e0, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:12.856 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:12.856 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:12.857 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:12.862 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@1db9b7e0, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest
23:21:12.863 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:12.863 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@46c03fe4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@37babe0e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1886b84c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@363a1a03, org.springframework.test.context.support.DirtiesContextTestExecutionListener@71422c3f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13eab6d7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3e03283e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@588fd7ff, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@384c3b05, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7e566ed5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@59b3fbf9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f25ff1f]
23:21:12.971 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:21:12.986 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 3 repository interfaces.
23:21:13.027 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:21:13.053 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
23:21:13.053 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
23:21:13.064 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:21:13.078 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:21:13.127 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:21:13.127 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:21:13.260 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:21:13.264 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:21:13.316 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7a238e5f testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@7606579, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@135c307f testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b7437a8]; rollback [true]
23:21:13.316 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.316 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.318 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:13.320 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:21:13.320 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:21:13.320 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'address'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:13.320 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.street' {propertyName=address,dereferenceType=COMPONENT,getPropertyPath=address,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'address' {originalText=address}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ComponentType@53884783}

23:21:13.320 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:21:13.320 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street=?
23:21:13.327 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7a238e5f testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@7606579, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@135c307f testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.464 sec
Running net.kaczmarzyk.AndE2eTest
23:21:13.328 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:13.328 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3b28cc2b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@502d9495, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@36010af3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@79688d97, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4dc4f05, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3869fa37, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@681395b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b381829, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5d7adc2c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2ab53df6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2571821a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5e732fcd]
23:21:13.329 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@758a41b0 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@75c2692b, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1de614f7 testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.330 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.330 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.331 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:13.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:21:13.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:13.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:13.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:21:13.334 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?)
23:21:13.337 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@758a41b0 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@75c2692b, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1de614f7 testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.utils.LoggedQueryTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.MultiLevelFetchJoinE2eTest
23:21:13.339 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:13.340 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5f832a1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@77ebd2ca, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6b90ad8c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5bb9ce5b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1f1092b7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@36447e1d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@58565994, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4d088fd3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@569639ef, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@43b701b6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29c76aad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@20381e51]
23:21:13.342 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@19b4dbb0, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.342 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.342 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.343 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:13.349 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:21:13.349 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
    |  |  |  |  \-[IDENT] Node: 'tags'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias3'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:13.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote4_.id as id1_6_3_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=4, fromElements=4, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias3], fromElementByTableAlias=[orders1_, ordernote4_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        +-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:13.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:21:13.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, ordernote4_.id as id1_6_3_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__, ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id where 1=1 order by customer0_.id asc
23:21:13.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:21:13.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'ItemTag'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:21:13.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'itemtag0_.id as id1_2_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag0_}
    |  \-[SQL_TOKEN] SqlFragment: 'itemtag0_.name as name2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[itemtag0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'item_tags itemtag0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=item_tags,tableAlias=itemtag0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}

23:21:13.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:21:13.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select itemtag0_.id as id1_2_, itemtag0_.name as name2_2_ from item_tags itemtag0_
23:21:13.375 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@19b4dbb0, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:13.375 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@24029871, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.376 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.376 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.377 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:13.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:13.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:13.382 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:13.382 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:13.382 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:21:13.395 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@24029871, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:13.396 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@2dd5609a, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.396 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.396 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.398 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:13.411 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@2dd5609a, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:13.412 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@7908de7f, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.412 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.412 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.414 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:13.464 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@7908de7f, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:13.465 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@198ad979, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.466 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.466 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:13.471 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:21:13.473 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:21:13.474 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:13.475 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:13.475 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:21:13.475 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where 1=1
23:21:13.486 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@198ad979, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.147 sec
Running net.kaczmarzyk.DisjunctionE2eTest
23:21:13.488 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:13.489 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@601e9c19, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4762c011, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@62ef35b3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2700b7bf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@33ea1912, org.springframework.test.context.transaction.TransactionalTestExecutionListener@62593536, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7980c663, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5b1f3ba3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@385e9b5b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1385e9e3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6c49862e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4e296a27]
23:21:13.490 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@14fb9efa testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@1693c96e, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@700f4764 testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.491 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.491 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:13.494 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:21:13.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gold'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'upper'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[DOT] Node: '.'
          |     |        +-[IDENT] Node: 'generatedAlias0'
          |     |        \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:13.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@439a0f0}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6dd59886}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6dd59886}

23:21:13.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:21:13.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?) or upper(customer0_.first_name) like ?
23:21:13.500 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@14fb9efa testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@1693c96e, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@700f4764 testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.DateInclusiveE2eTest
23:21:13.536 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:13.536 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3e5db430, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7bb87304, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@734f0ba5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4d972c8d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1e38ed3b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@26209dab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2db9a8e9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@59be0a97, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3665ae, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@22d97dc6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42477794, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6b0437f9]
23:21:13.538 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28132c9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@3b358b9f, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@18c9e670 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.538 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.538 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.540 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:13.545 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28132c9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@3b358b9f, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@18c9e670 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:13.546 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28132c9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@130f3129, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@18c9e670 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.547 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.547 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.548 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:13.550 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:21:13.550 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LE] Node: '<='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:13.551 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LE] BinaryLogicOperatorNode: '<='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@2474331d}
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@2474331d}

23:21:13.551 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:21:13.551 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=? and customer0_.registration_date>=?
23:21:13.554 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28132c9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@130f3129, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@18c9e670 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:13.555 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28132c9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@5690bde6, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@18c9e670 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.556 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:13.563 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28132c9 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@5690bde6, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@18c9e670 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 sec
Running net.kaczmarzyk.IsNullE2eTest
23:21:13.567 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:13.567 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2ac90548, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@679a6ab2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3e231755, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@44f6b9c5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@26f71756, org.springframework.test.context.transaction.TransactionalTestExecutionListener@128c36c0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@34b3127b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@457aadb9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5b294fe7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@28604874, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@46ca7c9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@14ebd598]
23:21:13.568 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@41bde31 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@66610869, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@60af81c4 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@dffcf1]; rollback [true]
23:21:13.568 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:13.568 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:13.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:13.574 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@41bde31 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@66610869, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@60af81c4 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
23:21:13.578 [Thread-5] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:21:13.581 [Thread-1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:21:13.581 [Thread-1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:21:13.582 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:21:13.583 [Thread-5] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:21:13.589 [Thread-1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:21:13.589 [Thread-1] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:21:13.590 [Thread-3] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:21:13.608 [Thread-3] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:21:13.609 [Thread-3] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:21:13.609 [Thread-3] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:21:13.615 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
23:21:13.616 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
23:21:13.616 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
23:21:13.636 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
23:21:13.636 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
23:21:13.640 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.

Results :

Tests run: 627, Failures: 0, Errors: 0, Skipped: 2

[INFO] 
[INFO] --- maven-license-plugin:1.10.b1:check (default) @ specification-arg-resolver ---
[INFO] Checking licenses...
[WARNING] Property 'strictCheck' is not enabled. Please consider adding <strictCheck>true</strictCheck> in your pom.xml file.
[WARNING] See http://code.google.com/p/maven-license-plugin/wiki/Configuration for more information.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  12.029 s
[INFO] Finished at: 2021-02-14T23:21:13Z
[INFO] ------------------------------------------------------------------------
